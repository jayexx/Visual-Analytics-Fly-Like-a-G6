{
  "hash": "38582fc9ae2fb50b055fdafc5d18ac5c",
  "result": {
    "markdown": "---\ntitle: \"Take-home Ex3\"\nauthor: \"Jayexx\"\ndate: \"May 29, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n## Introduction\n\nThis take-home exercise is centred on the learning patterns of learners in a programming course conducted by NorthClass Education Training Institute. The primary focus is to support the institution's endeavor to analyze and visualise learners' knowledge mastery levels, monitor the patterns and trends in their learning behaviors, identify and dissect potential factors that contribute to learning difficulties, and hence to derive feasible suggestions to adjust teaching strategies and course design.\n\n### Objective & Task Requirements\n\nTo address the above, the key objective of this exercise is:\n\n-   To analyse and provide a visual representation of the relationship between learning modes and knowledge acquisition (learners' ability to absorb, integrate, and apply knowledge)\n\nThis would entail the following sub-task requirements:\n\n-   To visualise and uncover the various learning modes, and\n-   To visualise and uncover the patterns in distribution in learner's performance in each various learning modes, and\n-   To visualise and determine the statistical differences and correlations that learning mode may have with learners' performance\n\n## Getting Started\n\n### Loading Required R Package Libraries\n\nThe code chunk below loads the following libraries:\n\n-   [`tidyverse`](https://www.tidyverse.org/packages/): an amalgamation of libraries for data handling (including ggplot2, dplyr, tidyr, readr, tibble)\n-   `knitr`: for creating dynamic html tables/reports\n-   `ggridges`: extension of ggplot2 designed for plotting ridgeline plots\n-   `ggdist`: extension of ggplot2 designed for visualising distribution and uncertainty,\n-   `colorspace`: provides a broad toolbox for selecting individual colors or color palettes, manipulating these colors, and employing them in various kinds of visualisations.\n-   `ggrepel`: provides geoms for ggplot2 to repel overlapping text labels.\n-   `ggthemes`: provides additional themes, geoms, and scales for ggplot package\n-   `hrbrthemes`: provides typography-centric themes and theme components for ggplot package\n-   `patchwork`: preparing composite figure created using ggplot package\n-   `lubridate`: for wrangling of date-time data\n-   `ggstatplot`: provides alternative statistical inference methods by default as an extension of the ggplot2 package\n-   `plotly`: R library for plotting interactive statistical graphs.\n-   [`rjson`](https://cran.r-project.org/web/packages/cluster/index.html): Methods for Cluster analysis.\n-   [`visNetwork`](https://cran.r-project.org/web/packages/factoextra/readme/README.html#:~:text=The%20R%20package%20factoextra%20has,data%20visualization%20with%20less%20typing.): Extract and Visualize the Results of Multivariate Data Analyses.\n-   [`BiocManager`](https://ggobi.github.io/ggally/): Extension of `ggplot2` by adding several functions to reduce the complexity of combining geometric objects with transformed data.\n-   [`igraph`](https://ggobi.github.io/ggally/): Extension of `ggplot2` by adding several functions to reduce the complexity of combining geometric objects with transformed data.\n-   cluster\n-   factoextra\n-   stats\n-   hms\n-   caret\n-   ggfortify\n-   gridExtra\n-   GGally\n-   parallelPlot\n-   seriation\n-   dendextend\n-   heatmaply\n-   corrplot\n-   ggalluvial\n-   entropy\n-   ineq\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, knitr, ggridges, ggdist, colorspace, ggrepel, ggthemes, hrbrthemes, patchwork, lubridate, ggstatsplot, plotly, rjson, visNetwork, BiocManager, igraph, cluster, factoextra, stats, hms, caret, ggfortify, gridExtra, GGally, parallelPlot, seriation, dendextend, heatmaply, corrplot, ggalluvial, entropy, ineq) \n```\n:::\n\n\n### Importing the Data\n\nThe data for this exercise was collected from a select group of learners over a specified set of programming tasks over a particular learning period, which was compiled in 3 datasets described below. It is accompanied by a separate document providing a more detailed description of the data and variables.\n\n-   Dataset 1: Student Information - This comprises of 5 Cols, 1364 Rows, providing individualised demographic variables of the learners (a.k.a students) within the scope this project\n-   Dataset 2: Learning Subject Title Information - This comprises of 5 Cols, 44 Rows, providing variables of the questions from the programming tasks which are collated in the scope of this project\n-   Dataset 3: Class Submission Records - This comprises of 15 datasets, each with 10 Cols and various number of rows, providing supposedly the participating learners' answering variables to the questions collated in the scope of this project\n\nThe code chunk below imports the dataset into R environment by using [*`read_csv()`*](https://readr.tidyverse.org/reference/read_delim.html) function of [`readr`](https://readr.tidyverse.org/), which is part of the tidyverse package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_StudentInfo <- read_csv(\"data/Data_StudentInfo.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_TitleInfo <- read_csv(\"data/Data_TitleInfo.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncsv_file_list <- dir('data/Data_SubmitRecord')\ncsv_file_list <- paste0(\"./data/Data_SubmitRecord/\",csv_file_list)\n\ndf_StudentRecord <- NULL\nfor (file in csv_file_list) { # for every file...\n  file <- read_csv(file)\n    df_StudentRecord <- rbind(df_StudentRecord, file) # then stick together by rows\n}\n```\n:::\n\n\n## Data Preparation\n\n### Data Cleaning\n\nBefore data transformation, the cleanliness of the data set is first ascertained by checking for missing and duplicate data.\n\n#### Missing Data\n\ncolSums() and is.NA() functions are used to search for missing values as a whole for the 3 data sets in the code chunks as follows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Find the number of missing values for each col\ncolSums(is.na(df_StudentInfo))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     index student_ID        sex        age      major \n         0          0          0          0          0 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Find the number of missing values for each col\ncolSums(is.na(df_TitleInfo))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        index      title_ID         score     knowledge sub_knowledge \n            0             0             0             0             0 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Find the number of missing values for each col\ncolSums(is.na(df_StudentRecord))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      index       class        time       state       score    title_ID \n          0           0           0           0           0           0 \n     method      memory timeconsume  student_ID \n          0           0           0           0 \n```\n:::\n:::\n\n\nFrom the outputs above, none of the variables contain missing values.\n\n#### Check for duplicate rows\n\nUsing duplicated(), duplicate rows in each of the 3 data sets are identified and extracted in the following code chunks.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_StudentInfo[duplicated(df_StudentInfo), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 5\n# ℹ 5 variables: index <dbl>, student_ID <chr>, sex <chr>, age <dbl>,\n#   major <chr>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_TitleInfo[duplicated(df_TitleInfo), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 5\n# ℹ 5 variables: index <dbl>, title_ID <chr>, score <dbl>, knowledge <chr>,\n#   sub_knowledge <chr>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_StudentRecord[duplicated(df_StudentRecord), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 10\n# ℹ 10 variables: index <dbl>, class <chr>, time <dbl>, state <chr>,\n#   score <dbl>, title_ID <chr>, method <chr>, memory <dbl>, timeconsume <chr>,\n#   student_ID <chr>\n```\n:::\n:::\n\n\nFrom the outputs above, there were no duplicate rows found.\n\n### Data Wrangling for Inconsistencies\n\nTo get a better understanding of the variables in the original dataset, the glimpse() function is used in the following code chunks.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(df_StudentInfo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,364\nColumns: 5\n$ index      <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ student_ID <chr> \"8b6d1125760bd3939b6e\", \"63eef37311aaac915a45\", \"5d89810b20…\n$ sex        <chr> \"female\", \"female\", \"female\", \"female\", \"male\", \"male\", \"ma…\n$ age        <dbl> 24, 21, 23, 21, 22, 19, 21, 18, 21, 24, 23, 20, 18, 18, 23,…\n$ major      <chr> \"J23517\", \"J87654\", \"J87654\", \"J78901\", \"J40192\", \"J57489\",…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(df_TitleInfo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 44\nColumns: 5\n$ index         <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1…\n$ title_ID      <chr> \"Question_VgKw8PjY1FR6cm2QI9XW\", \"Question_q7OpB2zCMmW9w…\n$ score         <dbl> 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3,…\n$ knowledge     <chr> \"r8S3g\", \"r8S3g\", \"r8S3g\", \"r8S3g\", \"r8S3g\", \"r8S3g\", \"t…\n$ sub_knowledge <chr> \"r8S3g_l0p5viby\", \"r8S3g_n0m9rsw4\", \"r8S3g_l0p5viby\", \"r…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(df_StudentRecord)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 232,818\nColumns: 10\n$ index       <dbl> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, …\n$ class       <chr> \"Class1\", \"Class1\", \"Class1\", \"Class1\", \"Class1\", \"Class1\"…\n$ time        <dbl> 1704209872, 1704209852, 1704209838, 1704208923, 1704208359…\n$ state       <chr> \"Absolutely_Correct\", \"Absolutely_Correct\", \"Absolutely_Co…\n$ score       <dbl> 3, 3, 3, 3, 4, 0, 3, 3, 3, 3, 3, 3, 3, 1, 3, 1, 1, 4, 0, 0…\n$ title_ID    <chr> \"Question_bumGRTJ0c8p4v5D6eHZa\", \"Question_62XbhBvJ8NUSnAp…\n$ method      <chr> \"Method_Cj9Ya2R7fZd6xs1q5mNQ\", \"Method_gj1NLb4Jn7URf9K2kQP…\n$ memory      <dbl> 320, 356, 196, 308, 320, 0, 308, 312, 312, 328, 512, 324, …\n$ timeconsume <chr> \"3\", \"3\", \"2\", \"2\", \"3\", \"5\", \"2\", \"2\", \"3\", \"2\", \"3\", \"2\"…\n$ student_ID  <chr> \"8b6d1125760bd3939b6e\", \"8b6d1125760bd3939b6e\", \"8b6d11257…\n```\n:::\n:::\n\n\n#### Identifying Other Unexpected Duplicate Values\n\nConsidering intuitively unique values for certain variables or dependent variables, other forms of duplicates are also identified and cleaned where relevant.\n\n1.  Duplicate student_ID in StudentInfo\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find the duplicated student_IDs\nduplicates <- df_StudentInfo[duplicated(df_StudentInfo$student_ID) | duplicated(df_StudentInfo$student_ID, fromLast = TRUE), ]\n\n# Display the rows with duplicate student_IDs\nduplicates\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 5\n# ℹ 5 variables: index <dbl>, student_ID <chr>, sex <chr>, age <dbl>,\n#   major <chr>\n```\n:::\n:::\n\n\nFrom the output above, no duplicates found.\n\n2.  Duplicate title_ID (aka questions) in TitleInfo\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find the duplicated title_IDs\nduplicates <- df_TitleInfo[duplicated(df_TitleInfo$title_ID) | duplicated(df_TitleInfo$title_ID, fromLast = TRUE), ]\n\n# Display the rows with duplicate title_IDs\nduplicates\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 5\n   index title_ID                      score knowledge sub_knowledge \n   <dbl> <chr>                         <dbl> <chr>     <chr>         \n 1     2 Question_q7OpB2zCMmW9wS8uNt3H     1 r8S3g     r8S3g_n0m9rsw4\n 2     3 Question_q7OpB2zCMmW9wS8uNt3H     1 r8S3g     r8S3g_l0p5viby\n 3    21 Question_QRm48lXxzdP7Tn1WgNOf     3 y9W5d     y9W5d_c0w4mj5h\n 4    22 Question_QRm48lXxzdP7Tn1WgNOf     3 m3D1v     m3D1v_r1d7fr3l\n 5    23 Question_pVKXjZn0BkSwYcsa7C31     3 y9W5d     y9W5d_c0w4mj5h\n 6    24 Question_pVKXjZn0BkSwYcsa7C31     3 m3D1v     m3D1v_r1d7fr3l\n 7    26 Question_lU2wvHSZq7m43xiVroBc     3 y9W5d     y9W5d_c0w4mj5h\n 8    27 Question_lU2wvHSZq7m43xiVroBc     3 k4W1c     k4W1c_h5r6nux7\n 9    30 Question_x2Fy7rZ3SwYl9jMQkpOD     3 y9W5d     y9W5d_c0w4mj5h\n10    31 Question_x2Fy7rZ3SwYl9jMQkpOD     3 s8Y2f     s8Y2f_v4x8by9j\n11    36 Question_oCjnFLbIs4Uxwek9rBpu     3 g7R2j     g7R2j_e0v1yls8\n12    37 Question_oCjnFLbIs4Uxwek9rBpu     3 m3D1v     m3D1v_r1d7fr3l\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(duplicates$knowledge)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"r8S3g\" \"y9W5d\" \"m3D1v\" \"k4W1c\" \"s8Y2f\" \"g7R2j\"\n```\n:::\n\n```{.r .cell-code}\nunique(duplicates$sub_knowledge)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"r8S3g_n0m9rsw4\" \"r8S3g_l0p5viby\" \"y9W5d_c0w4mj5h\" \"m3D1v_r1d7fr3l\"\n[5] \"k4W1c_h5r6nux7\" \"s8Y2f_v4x8by9j\" \"g7R2j_e0v1yls8\"\n```\n:::\n:::\n\n\nFrom the outputs above, some questions (title_ID) belong to up to 2 knowledge areas or 2 sub-knowledge areas, where the scores for the former are consistently 3, and for the latter, 1. This overlap in title_ID affects 6 title_IDs, spreads across 6 knowledge areas and 7 sub-knowledge areas.\n\nThe unique values for knowledge and sub-knowledge areas are obtained in the following code chunk to better understand the complexity of these 2 variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(df_TitleInfo$knowledge)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"r8S3g\" \"t5V9e\" \"m3D1v\" \"y9W5d\" \"k4W1c\" \"s8Y2f\" \"g7R2j\" \"b3C9s\"\n```\n:::\n\n```{.r .cell-code}\nunique(df_TitleInfo$sub_knowledge)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"r8S3g_l0p5viby\" \"r8S3g_n0m9rsw4\" \"t5V9e_e1k6cixp\" \"m3D1v_r1d7fr3l\"\n [5] \"m3D1v_v3d9is1x\" \"m3D1v_t0v5ts9h\" \"y9W5d_c0w4mj5h\" \"k4W1c_h5r6nux7\"\n [9] \"s8Y2f_v4x8by9j\" \"y9W5d_p8g6dgtv\" \"y9W5d_e2j7p95s\" \"g7R2j_e0v1yls8\"\n[13] \"g7R2j_j1g8gd3v\" \"b3C9s_l4z6od7y\" \"b3C9s_j0v1yls8\"\n```\n:::\n:::\n\n\nBased on the output above, there is a total of 8 knowledge areas and 15 sub-knowledge areas. This suggests that majority of the knowledge areas and approximately half of sub-knowledge areas have overlapping title_ID. From the nomenclature, each sub-knowledge area is tagged to only 1 knowledge area.\n\nTo meaningfully analyse the relationship between knowledge areas & sub knowledge areas and other variables, additional columns are introduced where the values in these 2 columns are transposed as column labels with binary values to indicate the tagging of each question to that value. This is done in the following code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transpose the knowledge column to create new columns for each unique value\ndf_TitleInfo1 <- df_TitleInfo %>%\n  mutate(knowledge_presence = 1) %>%\n  spread(key = knowledge, value = knowledge_presence, fill = 0)\n\n# Transpose the sub_knowledge column to create new columns for each unique value\ndf_TitleInfo2 <- df_TitleInfo %>%\n  mutate(sub_knowledge_presence = 1) %>%\n  spread(key = sub_knowledge, value = sub_knowledge_presence, fill = 0)\n\n# Combine the new columns with the original dataframe\ndf_TitleInfo3 <- df_TitleInfo2 %>%\n  distinct(index, .keep_all = TRUE) %>%\n  left_join(df_TitleInfo1, by = \"index\") %>%\n  distinct(index, .keep_all = TRUE) %>%\n  left_join(df_TitleInfo, by = \"index\")\n  \n\n# Reassign values to the knowledge & sub_knowledge columns for repeated title_ID rows\ndf_TitleInfo_gp <- df_TitleInfo3 %>%\n  group_by(title_ID) %>%\n  summarise(across(where(is.numeric), max, na.rm = TRUE),\n            knowledge = paste(unique(knowledge.x), collapse = \"_\"),\n            sub_knowledge = paste(unique(sub_knowledge.x), collapse = \"_\")) %>%\n  select(-score.y,\n         -score.x,\n         -index)\n\nglimpse(df_TitleInfo_gp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 38\nColumns: 27\n$ title_ID       <chr> \"Question_3MwAFlmNO8EKrpY5zjUd\", \"Question_3oPyUzDmQtcM…\n$ b3C9s_j0v1yls8 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0…\n$ b3C9s_l4z6od7y <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ g7R2j_e0v1yls8 <dbl> 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ g7R2j_j1g8gd3v <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ k4W1c_h5r6nux7 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ m3D1v_r1d7fr3l <dbl> 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0…\n$ m3D1v_t0v5ts9h <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0…\n$ m3D1v_v3d9is1x <dbl> 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ r8S3g_l0p5viby <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ r8S3g_n0m9rsw4 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ s8Y2f_v4x8by9j <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ t5V9e_e1k6cixp <dbl> 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ y9W5d_c0w4mj5h <dbl> 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1…\n$ y9W5d_e2j7p95s <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ y9W5d_p8g6dgtv <dbl> 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0…\n$ b3C9s          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0…\n$ g7R2j          <dbl> 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ k4W1c          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ m3D1v          <dbl> 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0…\n$ r8S3g          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ s8Y2f          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ t5V9e          <dbl> 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ y9W5d          <dbl> 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1…\n$ score          <dbl> 2, 2, 3, 3, 3, 3, 3, 3, 1, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3…\n$ knowledge      <chr> \"t5V9e\", \"t5V9e\", \"m3D1v\", \"g7R2j\", \"y9W5d\", \"m3D1v\", \"…\n$ sub_knowledge  <chr> \"t5V9e_e1k6cixp\", \"t5V9e_e1k6cixp\", \"m3D1v_r1d7fr3l\", \"…\n```\n:::\n\n```{.r .cell-code}\nunique(df_TitleInfo_gp$knowledge)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"t5V9e\"       \"m3D1v\"       \"g7R2j\"       \"y9W5d\"       \"r8S3g\"      \n [6] \"b3C9s\"       \"y9W5d_m3D1v\" \"y9W5d_k4W1c\" \"g7R2j_m3D1v\" \"y9W5d_s8Y2f\"\n```\n:::\n\n```{.r .cell-code}\nunique(df_TitleInfo_gp$sub_knowledge)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"t5V9e_e1k6cixp\"                \"m3D1v_r1d7fr3l\"               \n [3] \"g7R2j_e0v1yls8\"                \"y9W5d_c0w4mj5h\"               \n [5] \"m3D1v_v3d9is1x\"                \"y9W5d_p8g6dgtv\"               \n [7] \"r8S3g_n0m9rsw4\"                \"y9W5d_e2j7p95s\"               \n [9] \"b3C9s_j0v1yls8\"                \"m3D1v_t0v5ts9h\"               \n[11] \"y9W5d_c0w4mj5h_m3D1v_r1d7fr3l\" \"r8S3g_l0p5viby\"               \n[13] \"g7R2j_j1g8gd3v\"                \"b3C9s_l4z6od7y\"               \n[15] \"y9W5d_c0w4mj5h_k4W1c_h5r6nux7\" \"g7R2j_e0v1yls8_m3D1v_r1d7fr3l\"\n[17] \"r8S3g_n0m9rsw4_r8S3g_l0p5viby\" \"y9W5d_c0w4mj5h_s8Y2f_v4x8by9j\"\n```\n:::\n:::\n\n\n3.  Duplicate class for each Individual Students in StudentRecord\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Identify students with multiple classes\nstudents_multiple_classes <- df_StudentRecord %>%\n  group_by(student_ID) %>%\n  summarise(unique_classes = n_distinct(class)) %>%\n  filter(unique_classes > 1)\n\nstudents_multiple_classes_entries <- df_StudentRecord %>%\n  filter(student_ID %in% students_multiple_classes$student_ID) %>%\n  group_by(student_ID, class) %>%\n  summarise(count = n()) %>%\n  arrange(desc(count)) %>%\n  arrange(desc(student_ID))\n\n# Display the results\nprint(students_multiple_classes_entries)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 3\n# Groups:   student_ID [6]\n   student_ID           class   count\n   <chr>                <chr>   <int>\n 1 r9m46ndmmmzeeehft96z Class15   140\n 2 r9m46ndmmmzeeehft96z class       1\n 3 qz6jjynwbd3szlp0rj04 Class1    136\n 4 qz6jjynwbd3szlp0rj04 class       1\n 5 nd9xpohv0s4ttw0o7fts Class8    143\n 6 nd9xpohv0s4ttw0o7fts class       1\n 7 lqm8jh0uggps7yd0lx2x Class8    132\n 8 lqm8jh0uggps7yd0lx2x class       1\n 9 isa355t9q5rut5fm8aml Class1    142\n10 isa355t9q5rut5fm8aml class       1\n11 ezdogkk0jqt4nvvvbnxp Class7    125\n12 ezdogkk0jqt4nvvvbnxp class       1\n```\n:::\n:::\n\n\nBased on the output above, it is apparent that the 2nd class for each of the student above is an erroneous value. Hence this inconsistency will be cleaned in the following code chunk\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Identify the correct class for each student (the class with the highest frequency)\ncorrect_classes <- df_StudentRecord %>%\n  filter(student_ID %in% students_multiple_classes$student_ID) %>%\n  group_by(student_ID, class) %>%\n  summarise(count = n()) %>%\n  arrange(desc(count)) %>%\n  slice(1) %>%\n  select(student_ID, correct_class = class)\n\n# Step 2: Replace wrong class values\ndf_StudentRecord <- df_StudentRecord %>%\n  left_join(correct_classes, by = \"student_ID\") %>%\n  mutate(class = ifelse(!is.na(correct_class), correct_class, class)) %>%\n  select(-correct_class)\n```\n:::\n\n\nFor completeness, a check is done for existence of other students with class that has no class number in the following code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMissingClassNo <- df_StudentRecord %>%\n  filter(class == \"class\")\nMissingClassNo\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 10\n# ℹ 10 variables: index <dbl>, class <chr>, time <dbl>, state <chr>,\n#   score <dbl>, title_ID <chr>, method <chr>, memory <dbl>, timeconsume <chr>,\n#   student_ID <chr>\n```\n:::\n:::\n\n\nBased on the output above, there are no further students with class without number.\n\n#### Identifying Other Unexpected and/or Missing Values\n\n1.  Missing Student_ID and title_ID in StudentRecord are also identified.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_students <- anti_join(df_StudentRecord, df_StudentInfo, by = \"student_ID\")\n\n# Display the missing student IDs\nmissing_student_ids <- missing_students %>% select(student_ID) %>% distinct()\nprint(missing_student_ids)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  student_ID           \n  <chr>                \n1 44c7cf3881ae07f7fb3eD\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_questions <- anti_join(df_StudentRecord, df_TitleInfo, by = \"title_ID\")\n\n# Display the missing title IDs\nmissing_questions <- missing_questions %>% select(title_ID) %>% distinct()\nprint(missing_questions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 1\n# ℹ 1 variable: title_ID <chr>\n```\n:::\n:::\n\n\nThere is 1 missing student between either StudentRecord or StudentInfo, but no missing questions. Since there is partial missing info on this student, it isn't meaningful to include in this analysis, hence the student_ID will be excluded in the following code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_StudentInfo <- df_StudentInfo %>%\n  filter (student_ID != '44c7cf3881ae07f7fb3eD')\ndf_StudentRecord <- df_StudentRecord %>%\n  filter (student_ID != '44c7cf3881ae07f7fb3eD')\n```\n:::\n\n\n2.  Other unexpected values\n\nThe unique values for each column is queried to check for unexpected values in the following code chunk, wherein Index, time, class, title_ID and student_ID are excluded since they will be dealt with separately\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(df_StudentRecord$state)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Absolutely_Correct\" \"Error1\"             \"Absolutely_Error\"  \n [4] \"Error6\"             \"Error4\"             \"Partially_Correct\" \n [7] \"Error2\"             \"Error3\"             \"Error5\"            \n[10] \"Error7\"             \"Error8\"             \"Error9\"            \n[13] \"�������\"           \n```\n:::\n\n```{.r .cell-code}\nunique(df_StudentRecord$score)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3 4 0 1 2\n```\n:::\n\n```{.r .cell-code}\nunique(df_StudentRecord$method)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Method_Cj9Ya2R7fZd6xs1q5mNQ\" \"Method_gj1NLb4Jn7URf9K2kQPd\"\n[3] \"Method_5Q4KoXthUuYz3bvrTDFm\" \"Method_m8vwGkEZc3TSW2xqYUoR\"\n[5] \"Method_BXr9AIsPQhwNvyGdZL57\"\n```\n:::\n\n```{.r .cell-code}\nunique(df_StudentRecord$memory)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1]   320   356   196   308     0   312   328   512   324   188   316   344\n [13]   444   192   332   484   360   200   340   184   476   492   180   448\n [25]   464  8544   204   496   364   460   508   456   352   480   348   488\n [37]   468   400   616   472   384   376   452   336   588   604   440   600\n [49]   580   500   640   520   436   368   612   504   736   632  8448   220\n [61]   372   208   828   256   568   576   628   756   620   700   212   592\n [73]   380   396   432   404   644   564   748   216   264   708   768   304\n [85]   420   624  8516  8644   288  8632  8640  8512   408   260   292   608\n [97]  8580   636   536   424   596   272   388   300   280   268   176   160\n[109]   296   416   240   284   248   172  8388   832  4164  4284   428   168\n[121]   572   164   276   528   392   412  8668  8500  8540  8664  8536  8576\n[133]  8628  8504  8800  8524  8392  8548   692   952  8508  8648  9664  9536\n[145]  9564 49852 59616  1332   948   824   724  2876  3024 24668 25208 26712\n[157] 23968   732 25248 22740   712  8520   720 18264   224  4984  8696 20272\n[169] 19576   516  8976  9028  9532   544   584   552   524  5624 29688   688\n[181] 30940 44020   740   556 51376 14656 65536   680 30440 30284 23128 28112\n[193]   760 15060 25660 23356 31796   804 24768 24232 12792 14720 26172 29020\n[205] 32992 28492 10568  8460  8404   908   652   540  8620 34268 11348 11640\n[217] 13124   532 12608 15028  1400 32544 39612 27272 28852 29248  8452  8616\n[229]  8480  8528   560 13576  8436   548  2012 24896   232 21728 21148  4424\n[241]  7640 43512 39912 19936 12580  2412  2436 24224  4296  4332  6392 25912\n[253] 21332 20128   668 35948  2360  8612  8384  5560 26548 25532 13112 15288\n[265] 13992 49336 53216 15040 13780  8496  8424 37184  8476  8400  8408 30656\n[277]  8156  8140  8064  8136 11236  5616  8160  4192 23116 19784 22908 21176\n[289] 18276 20708 19868 16348 18716 17208 19588 14824 20780 20204 24932 21084\n[301] 24992 21884 18764 26624 24368 13240 22988  3740 43532 26084 26320 13340\n[313] 11372 46460 49464 13356  8144  8564  1720 13892 14488 10580 23576  8396\n[325] 15212 15340   872 25648 25920 27028 24356 23544  7416  6560  4852  8556\n[337] 32088 32716 44216  4292   228 33212 33736 27228 27288 11764 10540 11560\n[349] 10456 11384 10708 32932 25940 17800 16764 46908 30512  9368  9472 19156\n[361]  2348 36136  8132  4708 39048 21152 30632 27200   656   252 47096  8552\n[373]  8464 14040 36984  2384  1792  6084  5844  2456  2440 26452 27364   648\n[385]   244 23168 24324  8420 41460 40568 34316   896  1472  7156 23740  6444\n[397]  6972  6200  6060  7488  6700  6580  5184  4948  5052  5820  6120  5404\n[409]  5028  5180  5100  5068  5020  5204  5976  5176  5048  5884  5824  5828\n[421]  5060  5072  5056  6076  6328  5076  8492  8428   236  7340  6668  7492\n[433]  8412  8652 17176  6852  6616  6032 45288 50140 40348 16848 21820 20856\n[445] 26296 28128 31560 17272 17656 37548 34476 38428 30456 41624 34224 18148\n[457] 20816   128   808   156   844   728   716   696   836   676  4324   860\n[469]  1980  8812   660  8636   684  8756   704  8532  8572  1920  1972  2332\n[481]  2172  2296  2280 13908 63088 15432 15680 15624 15824 15956 15724 15292\n[493]  8796  1880  1996  1992 11256 11268 11264 29240 29144 28752 27988  6068\n[505]  1180 28536 11032 39216 35632 28600  2104  8656 36028 38432 12456 30164\n[517]  1268  1328  1316  1240 50220  4540 35888  1976  4440 14336 14384 45680\n[529] 39080 28484 39104 53732  8680  8692  8660 14136  4564  4480 28848 29112\n[541] 18856  8792  8600  8592 41404 37052 36532 37804 33084 37368 30820 50620\n[553] 26248 22264 26616 25900   752 47040 14644 40636 43128 33568 36248 33088\n[565] 28140 28084 30532 30572 48376 47640 17400 20288 28724 20216 12664 12204\n[577] 11960 27188 15700 15664  4580  4584 28036 28732 34004 33508 31808  1528\n[589]  1716 13752  9592  9520  9784  9208  8828 28716 27536 28584  1704  1620\n[601] 13096 14132 14584 57528 45500  7096  2168  2236 12984 20412 31172 29296\n[613] 54356 54336 47548 41664 41812 13624  1336  1348 13496 55524  1352  1356\n[625] 42052   744   996   984   940  1016 29012 28080 26036  7344  7232  7476\n[637]  7828 13956 43452  1456  1324  1364 43196 27964 10812   972  1340  4692\n[649] 27248 44592 44860 46576 20464 52656 52996 48964 49516  6904  6592  6584\n[661]  8672 46852 40364 14500 14712 17740 17620 52584  8488 36488 44204 44500\n[673] 42300 45228 17980 37460 28240 28988 53288 58424  9540  9524  6936  6204\n[685] 54596 28604 29528 42804 12856 13776 15720  4156 12472  8704  8688 29300\n[697] 18612 12976 32376  8776 13548 26456  1884  1752   764  4172 53316 52160\n[709] 47036 45632 53396 51320 12468 11496 53604\n```\n:::\n\n```{.r .cell-code}\nunique(df_StudentRecord$timeconsume)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"3\"   \"2\"   \"5\"   \"4\"   \"1\"   \"9\"   \"6\"   \"--\"  \"18\"  \"61\"  \"7\"   \"59\" \n [13] \"10\"  \"8\"   \"12\"  \"13\"  \"16\"  \"15\"  \"183\" \"68\"  \"314\" \"64\"  \"60\"  \"11\" \n [25] \"96\"  \"94\"  \"58\"  \"67\"  \"54\"  \"17\"  \"122\" \"19\"  \"126\" \"14\"  \"91\"  \"50\" \n [37] \"21\"  \"40\"  \"23\"  \"20\"  \"80\"  \"31\"  \"118\" \"400\" \"63\"  \"25\"  \"27\"  \"29\" \n [49] \"24\"  \"26\"  \"62\"  \"152\" \"39\"  \"22\"  \"117\" \"30\"  \"28\"  \"48\"  \"309\" \"331\"\n [61] \"36\"  \"65\"  \"47\"  \"46\"  \"45\"  \"52\"  \"32\"  \"42\"  \"34\"  \"38\"  \"187\" \"37\" \n [73] \"190\" \"163\" \"41\"  \"53\"  \"51\"  \"307\" \"201\" \"184\" \"44\"  \"43\"  \"109\" \"33\" \n [85] \"66\"  \"326\" \"73\"  \"49\"  \"77\"  \"82\"  \"70\"  \"71\"  \"81\"  \"35\"  \"57\"  \"75\" \n [97] \"394\" \"385\" \"164\" \"78\"  \"220\" \"217\" \"115\" \"86\"  \"72\"  \"88\"  \"76\"  \"134\"\n[109] \"55\"  \"84\"  \"56\"  \"106\" \"166\" \"124\" \"373\" \"289\" \"-\"   \"135\" \"103\" \"114\"\n[121] \"258\" \"254\" \"85\"  \"69\"  \"90\"  \"132\" \"173\" \"272\" \"113\" \"116\" \"215\" \"123\"\n[133] \"246\" \"146\" \"89\"  \"245\" \"285\" \"205\" \"162\" \"165\" \"266\" \"172\" \"143\" \"377\"\n[145] \"160\" \"159\" \"182\" \"74\"  \"264\" \"153\" \"83\"  \"286\" \"275\" \"280\" \"274\" \"269\"\n[157] \"288\" \"271\" \"136\" \"276\" \"277\" \"356\" \"79\"  \"147\" \"350\" \"315\" \"321\" \"302\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(df_StudentInfo$sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"female\" \"male\"  \n```\n:::\n\n```{.r .cell-code}\nunique(df_StudentInfo$age)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 24 21 23 22 19 18 20\n```\n:::\n\n```{.r .cell-code}\nunique(df_StudentInfo$major)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"J23517\" \"J87654\" \"J78901\" \"J40192\" \"J57489\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(df_TitleInfo$score)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 3 4\n```\n:::\n\n```{.r .cell-code}\nunique(df_TitleInfo$knowledge)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"r8S3g\" \"t5V9e\" \"m3D1v\" \"y9W5d\" \"k4W1c\" \"s8Y2f\" \"g7R2j\" \"b3C9s\"\n```\n:::\n\n```{.r .cell-code}\nunique(df_TitleInfo$sub_knowledge)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"r8S3g_l0p5viby\" \"r8S3g_n0m9rsw4\" \"t5V9e_e1k6cixp\" \"m3D1v_r1d7fr3l\"\n [5] \"m3D1v_v3d9is1x\" \"m3D1v_t0v5ts9h\" \"y9W5d_c0w4mj5h\" \"k4W1c_h5r6nux7\"\n [9] \"s8Y2f_v4x8by9j\" \"y9W5d_p8g6dgtv\" \"y9W5d_e2j7p95s\" \"g7R2j_e0v1yls8\"\n[13] \"g7R2j_j1g8gd3v\" \"b3C9s_l4z6od7y\" \"b3C9s_j0v1yls8\"\n```\n:::\n:::\n\n\nFrom the outputs above, there is an unexpected value for state and timeconsume in StudentRecord.\n\nStarting with state, the rows with unexpected value(s) are queried in the following code chunk to better understand the number of affected rows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nOutlier_state <- df_StudentRecord %>%\n  filter (state == '�������')\nOutlier_state\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 10\n  index class     time state score title_ID method memory timeconsume student_ID\n  <dbl> <chr>    <dbl> <chr> <dbl> <chr>    <chr>   <dbl> <chr>       <chr>     \n1  6344 Class10 1.70e9 ����…     0 Questio… Metho…  65536 309         c681117f7…\n2  6346 Class10 1.70e9 ����…     0 Questio… Metho…  65536 331         c681117f7…\n3  6347 Class10 1.70e9 ����…     0 Questio… Metho…  65536 331         c681117f7…\n4 10138 Class8  1.69e9 ����…     0 Questio… Metho…  65536 356         1883af270…\n5 16420 Class8  1.69e9 ����…     0 Questio… Metho…  65536 356         hpb03ydul…\n6 16458 Class8  1.69e9 ����…     0 Questio… Metho…  65536 356         ljylby8in…\n```\n:::\n:::\n\n\nFrom the output above, there are only 6 rows that are affected. Further cross-validation with the data description document found that there should only be 12 unique values for this variable, and including this outlier state value will give 13. Hence this is likely a wrong entry, and so it will be excluded from the analysis in the following code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_StudentRecord <- df_StudentRecord %>%\n  filter (state != '�������')\n```\n:::\n\n\nFor timeconsume, the rows with unexpected value(s) are queried in the following code chunk to better understand the number of affected rows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nOutlier_timeconsume <- df_StudentRecord %>%\n  filter (timeconsume %in% c('-', '--'))\nOutlier_timeconsume\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,612 × 10\n   index class    time state score title_ID method memory timeconsume student_ID\n   <dbl> <chr>   <dbl> <chr> <dbl> <chr>    <chr>   <dbl> <chr>       <chr>     \n 1   191 Class1 1.70e9 Erro…     0 Questio… Metho…      0 --          9417c1b4c…\n 2   321 Class1 1.70e9 Erro…     0 Questio… Metho…      0 --          8b1fbc973…\n 3   322 Class1 1.70e9 Erro…     0 Questio… Metho…      0 --          8b1fbc973…\n 4   366 Class1 1.70e9 Erro…     0 Questio… Metho…      0 --          9ea29e4a7…\n 5   396 Class1 1.70e9 Erro…     0 Questio… Metho…      0 --          9ea29e4a7…\n 6   397 Class1 1.70e9 Erro…     0 Questio… Metho…      0 --          9ea29e4a7…\n 7   422 Class1 1.70e9 Erro…     0 Questio… Metho…      0 --          f06c3ddb1…\n 8   423 Class1 1.70e9 Erro…     0 Questio… Metho…      0 --          f06c3ddb1…\n 9   424 Class1 1.70e9 Erro…     0 Questio… Metho…      0 --          f06c3ddb1…\n10   425 Class1 1.70e9 Erro…     0 Questio… Metho…      0 --          f06c3ddb1…\n# ℹ 2,602 more rows\n```\n:::\n:::\n\n\nBased on the output, there is a sizable number of 2,612 rows with the unexpected value. Hence these rows will be kept in the analysis and replaced with 0 (since there is no existing values of 0 too), however subsequent analysis in this exercise involving the timeconsume variable will note these values as missing values. This is done in the following code chunk\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_StudentRecord <- df_StudentRecord %>%\n  mutate(timeconsume = ifelse(timeconsume %in% c(\"-\", \"--\"), 0, timeconsume))\nunique(df_StudentRecord$timeconsume)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"3\"   \"2\"   \"5\"   \"4\"   \"1\"   \"9\"   \"6\"   \"0\"   \"18\"  \"61\"  \"7\"   \"59\" \n [13] \"10\"  \"8\"   \"12\"  \"13\"  \"16\"  \"15\"  \"183\" \"68\"  \"314\" \"64\"  \"60\"  \"11\" \n [25] \"96\"  \"94\"  \"58\"  \"67\"  \"54\"  \"17\"  \"122\" \"19\"  \"126\" \"14\"  \"91\"  \"50\" \n [37] \"21\"  \"40\"  \"23\"  \"20\"  \"80\"  \"31\"  \"118\" \"400\" \"63\"  \"25\"  \"27\"  \"29\" \n [49] \"24\"  \"26\"  \"62\"  \"152\" \"39\"  \"22\"  \"117\" \"30\"  \"28\"  \"48\"  \"36\"  \"65\" \n [61] \"47\"  \"46\"  \"45\"  \"52\"  \"32\"  \"42\"  \"34\"  \"38\"  \"187\" \"37\"  \"190\" \"163\"\n [73] \"41\"  \"53\"  \"51\"  \"307\" \"201\" \"184\" \"44\"  \"43\"  \"109\" \"33\"  \"66\"  \"326\"\n [85] \"73\"  \"49\"  \"77\"  \"82\"  \"70\"  \"71\"  \"81\"  \"35\"  \"57\"  \"75\"  \"394\" \"385\"\n [97] \"164\" \"78\"  \"220\" \"217\" \"115\" \"86\"  \"72\"  \"88\"  \"76\"  \"134\" \"55\"  \"84\" \n[109] \"56\"  \"106\" \"166\" \"124\" \"373\" \"289\" \"135\" \"103\" \"114\" \"258\" \"254\" \"85\" \n[121] \"69\"  \"90\"  \"132\" \"173\" \"272\" \"113\" \"116\" \"215\" \"123\" \"246\" \"146\" \"89\" \n[133] \"245\" \"285\" \"205\" \"162\" \"165\" \"266\" \"172\" \"143\" \"377\" \"160\" \"159\" \"182\"\n[145] \"74\"  \"264\" \"153\" \"83\"  \"286\" \"275\" \"331\" \"280\" \"274\" \"269\" \"288\" \"271\"\n[157] \"136\" \"276\" \"277\" \"79\"  \"147\" \"350\" \"315\" \"321\" \"302\"\n```\n:::\n:::\n\n\n#### Removing Index Col\n\nEach data set contains an index column, which is possibly to keep track of the original order and the total number of rows. This is no longer required and relevant in the analysis, hence it will be excluded.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#remove index column\ndf_StudentRecord <- df_StudentRecord %>% select(-1)\ndf_TitleInfo <- df_TitleInfo %>% select(-1)\ndf_StudentInfo <- df_StudentInfo %>% select(-1)\n```\n:::\n\n\n#### Correcting Data Types\n\nBased on the glimpse() function, the time variable of the StudentRecord is currently in numerical format. This will be corrected to date time format with the following steps.\n\nStep 1: From the data description document, the data collection period spans 148 days from 31/8/2023 to 25/1/2024, and the time variable of the StudentRecord in this data set is in seconds. This is compared against the min and max values of the time variable converted to days and deducted from the given start and end date of the collection period given, in the following code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get the min and max values of the time column\nmin_time <- min(df_StudentRecord$time, na.rm = TRUE)\nmax_time <- max(df_StudentRecord$time, na.rm = TRUE)\n\n# Display the min & max values\ndate_adjustment1 <- as.numeric(as.Date(\"2023-08-31\")) - (min_time / 24 / 60 / 60)\ndate_adjustment2 <- as.numeric(as.Date(\"2024-01-25\")) - (max_time / 24 / 60 / 60)\ndate_adjustmentavg <- as.Date((date_adjustment1 + date_adjustment2)/2, origin = \"1970-01-01\")\ndate_adjustmentavg\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"1969-12-31\"\n```\n:::\n:::\n\n\nStep 2: Apply date_adjustmentavg to the time variable to amend the data type to date time format in the folloiwing code chunk\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert time from timestamp to POSIXct\ndf_StudentRecord$time_change <- as.POSIXct(df_StudentRecord$time, origin=date_adjustmentavg, tz=\"UTC\")\n\nglimpse(df_StudentRecord)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 232,811\nColumns: 10\n$ class       <chr> \"Class1\", \"Class1\", \"Class1\", \"Class1\", \"Class1\", \"Class1\"…\n$ time        <dbl> 1704209872, 1704209852, 1704209838, 1704208923, 1704208359…\n$ state       <chr> \"Absolutely_Correct\", \"Absolutely_Correct\", \"Absolutely_Co…\n$ score       <dbl> 3, 3, 3, 3, 4, 0, 3, 3, 3, 3, 3, 3, 3, 1, 3, 1, 1, 4, 0, 0…\n$ title_ID    <chr> \"Question_bumGRTJ0c8p4v5D6eHZa\", \"Question_62XbhBvJ8NUSnAp…\n$ method      <chr> \"Method_Cj9Ya2R7fZd6xs1q5mNQ\", \"Method_gj1NLb4Jn7URf9K2kQP…\n$ memory      <dbl> 320, 356, 196, 308, 320, 0, 308, 312, 312, 328, 512, 324, …\n$ timeconsume <chr> \"3\", \"3\", \"2\", \"2\", \"3\", \"5\", \"2\", \"2\", \"3\", \"2\", \"3\", \"2\"…\n$ student_ID  <chr> \"8b6d1125760bd3939b6e\", \"8b6d1125760bd3939b6e\", \"8b6d11257…\n$ time_change <dttm> 2024-01-02 08:45:17, 2024-01-02 08:44:57, 2024-01-02 08:4…\n```\n:::\n:::\n\n\nFurther, the timeconsume variable will be converted to numeric, wherein since the '-' and '--' values found earlier had taken the value of 0, there will not be an issue of NA values affecting subsequent analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_StudentRecord <- df_StudentRecord %>%\n  mutate(timeconsume = as.numeric(timeconsume))\n\nglimpse(df_StudentRecord)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 232,811\nColumns: 10\n$ class       <chr> \"Class1\", \"Class1\", \"Class1\", \"Class1\", \"Class1\", \"Class1\"…\n$ time        <dbl> 1704209872, 1704209852, 1704209838, 1704208923, 1704208359…\n$ state       <chr> \"Absolutely_Correct\", \"Absolutely_Correct\", \"Absolutely_Co…\n$ score       <dbl> 3, 3, 3, 3, 4, 0, 3, 3, 3, 3, 3, 3, 3, 1, 3, 1, 1, 4, 0, 0…\n$ title_ID    <chr> \"Question_bumGRTJ0c8p4v5D6eHZa\", \"Question_62XbhBvJ8NUSnAp…\n$ method      <chr> \"Method_Cj9Ya2R7fZd6xs1q5mNQ\", \"Method_gj1NLb4Jn7URf9K2kQP…\n$ memory      <dbl> 320, 356, 196, 308, 320, 0, 308, 312, 312, 328, 512, 324, …\n$ timeconsume <dbl> 3, 3, 2, 2, 3, 5, 2, 2, 3, 2, 3, 2, 2, 3, 3, 3, 2, 3, 3, 5…\n$ student_ID  <chr> \"8b6d1125760bd3939b6e\", \"8b6d1125760bd3939b6e\", \"8b6d11257…\n$ time_change <dttm> 2024-01-02 08:45:17, 2024-01-02 08:44:57, 2024-01-02 08:4…\n```\n:::\n:::\n\n\n### Create Merged Dataset\n\nTo prepare for cross-dataset visualisation and analysis of variables, the 3 data sets are joined on title_id and student_id variables in the following code chunks.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Merge StudentInfo with SubmitRecord based on student_ID\nmerged_data <- merge(df_StudentRecord, df_StudentInfo, by = \"student_ID\")\n\n# Merge TitleInfo with the already merged data based on title_ID\nmerged_data <- merge(merged_data, df_TitleInfo_gp, by = \"title_ID\")\n\nmerged_data <- merged_data %>%\n  rename(\n    actual_score = score.x,\n    question_score = score.y\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(merged_data, \"merged_data_df.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse (merged_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 232,811\nColumns: 39\n$ title_ID       <chr> \"Question_3MwAFlmNO8EKrpY5zjUd\", \"Question_3MwAFlmNO8EK…\n$ student_ID     <chr> \"d554e419f820fa5cb0ca\", \"b92448e12093e45dc6ff\", \"6b2292…\n$ class          <chr> \"Class9\", \"Class8\", \"Class12\", \"Class7\", \"Class1\", \"Cla…\n$ time           <dbl> 1696330917, 1699625054, 1697444103, 1695964704, 1697727…\n$ state          <chr> \"Partially_Correct\", \"Partially_Correct\", \"Error1\", \"Pa…\n$ actual_score   <dbl> 1, 1, 0, 1, 0, 0, 1, 0, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1…\n$ method         <chr> \"Method_BXr9AIsPQhwNvyGdZL57\", \"Method_BXr9AIsPQhwNvyGd…\n$ memory         <dbl> 196, 332, 0, 196, 0, 0, 336, 320, 324, 204, 340, 320, 3…\n$ timeconsume    <dbl> 2, 6, 2, 3, 4, 3, 4, 4, 2, 2, 3, 5, 3, 4, 3, 5, 1, 3, 3…\n$ time_change    <dttm> 2023-10-03 04:09:22, 2023-11-10 07:11:39, 2023-10-16 0…\n$ sex            <chr> \"male\", \"female\", \"female\", \"male\", \"male\", \"male\", \"ma…\n$ age            <dbl> 19, 21, 23, 20, 21, 20, 19, 20, 21, 21, 21, 21, 21, 21,…\n$ major          <chr> \"J40192\", \"J23517\", \"J87654\", \"J87654\", \"J40192\", \"J401…\n$ b3C9s_j0v1yls8 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ b3C9s_l4z6od7y <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ g7R2j_e0v1yls8 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ g7R2j_j1g8gd3v <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ k4W1c_h5r6nux7 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ m3D1v_r1d7fr3l <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ m3D1v_t0v5ts9h <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ m3D1v_v3d9is1x <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ r8S3g_l0p5viby <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ r8S3g_n0m9rsw4 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ s8Y2f_v4x8by9j <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ t5V9e_e1k6cixp <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ y9W5d_c0w4mj5h <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ y9W5d_e2j7p95s <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ y9W5d_p8g6dgtv <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ b3C9s          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ g7R2j          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ k4W1c          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ m3D1v          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ r8S3g          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ s8Y2f          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ t5V9e          <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ y9W5d          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ question_score <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2…\n$ knowledge      <chr> \"t5V9e\", \"t5V9e\", \"t5V9e\", \"t5V9e\", \"t5V9e\", \"t5V9e\", \"…\n$ sub_knowledge  <chr> \"t5V9e_e1k6cixp\", \"t5V9e_e1k6cixp\", \"t5V9e_e1k6cixp\", \"…\n```\n:::\n:::\n\n\n## Learning modes\n\nBased on the given data, the relevant features that best defines a learner's learning mode is assessed to be as follows:\n\n-   Peak answering hours determined by (a) day of the week and (b) time of the day\n-   Variety of question types attempted determined by (a) total number of different questions attempted, (b) total number of different knowledge and sub knowledge areas covered,\n-   Depth of question types and answers determined by (a) mean question scores, (b) mean memory size of file submissions across questions\n-   Level of learning effort determined by (a) total number of answering attempts, (b) average number of different answering methods used across questions, (C) total memory size of file submission\n-   Categorical preferences\n\n### Feature engineering\n\n#### Peak answering hours Boolean Integer Variables\n\nSplitting Date and time up from the earlier created time_change date-time variable, and adding 2 derived variables for boolean integer values for weekday (Mon to Fri) and working hours (8am to 8pm) with the following code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerged_data_lm <- merged_data %>%\n  mutate(\n    date = as.Date(time_change),\n    time = as_hms(format(time_change, \"%H:%M:%S\")),\n    is_weekday = as.numeric(wday(date) %in% 2:6),  # Monday to Friday 1, else 0\n    is_working_hours = as.numeric(hour(time) >= 8 & hour(time) < 20)  # 8am to 8pm 1, else 0\n  )\n\nglimpse(merged_data_lm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 232,811\nColumns: 42\n$ title_ID         <chr> \"Question_3MwAFlmNO8EKrpY5zjUd\", \"Question_3MwAFlmNO8…\n$ student_ID       <chr> \"d554e419f820fa5cb0ca\", \"b92448e12093e45dc6ff\", \"6b22…\n$ class            <chr> \"Class9\", \"Class8\", \"Class12\", \"Class7\", \"Class1\", \"C…\n$ time             <time> 04:09:22, 07:11:39, 01:22:28, 22:25:49, 08:11:04, 02…\n$ state            <chr> \"Partially_Correct\", \"Partially_Correct\", \"Error1\", \"…\n$ actual_score     <dbl> 1, 1, 0, 1, 0, 0, 1, 0, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1,…\n$ method           <chr> \"Method_BXr9AIsPQhwNvyGdZL57\", \"Method_BXr9AIsPQhwNvy…\n$ memory           <dbl> 196, 332, 0, 196, 0, 0, 336, 320, 324, 204, 340, 320,…\n$ timeconsume      <dbl> 2, 6, 2, 3, 4, 3, 4, 4, 2, 2, 3, 5, 3, 4, 3, 5, 1, 3,…\n$ time_change      <dttm> 2023-10-03 04:09:22, 2023-11-10 07:11:39, 2023-10-16…\n$ sex              <chr> \"male\", \"female\", \"female\", \"male\", \"male\", \"male\", \"…\n$ age              <dbl> 19, 21, 23, 20, 21, 20, 19, 20, 21, 21, 21, 21, 21, 2…\n$ major            <chr> \"J40192\", \"J23517\", \"J87654\", \"J87654\", \"J40192\", \"J4…\n$ b3C9s_j0v1yls8   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ b3C9s_l4z6od7y   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ g7R2j_e0v1yls8   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ g7R2j_j1g8gd3v   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ k4W1c_h5r6nux7   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ m3D1v_r1d7fr3l   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ m3D1v_t0v5ts9h   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ m3D1v_v3d9is1x   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ r8S3g_l0p5viby   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ r8S3g_n0m9rsw4   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ s8Y2f_v4x8by9j   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ t5V9e_e1k6cixp   <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ y9W5d_c0w4mj5h   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ y9W5d_e2j7p95s   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ y9W5d_p8g6dgtv   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ b3C9s            <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ g7R2j            <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ k4W1c            <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ m3D1v            <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ r8S3g            <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ s8Y2f            <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ t5V9e            <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ y9W5d            <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ question_score   <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,…\n$ knowledge        <chr> \"t5V9e\", \"t5V9e\", \"t5V9e\", \"t5V9e\", \"t5V9e\", \"t5V9e\",…\n$ sub_knowledge    <chr> \"t5V9e_e1k6cixp\", \"t5V9e_e1k6cixp\", \"t5V9e_e1k6cixp\",…\n$ date             <date> 2023-10-03, 2023-11-10, 2023-10-16, 2023-09-28, 2023…\n$ is_weekday       <dbl> 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0,…\n$ is_working_hours <dbl> 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0,…\n```\n:::\n:::\n\n\n#### Group By Student ID\n\nThe following variables will be obtained with the code chunk below in preparation for clustering analysis\n\n-   Peak answering hours\n\n(a) percentage of answers on weekdays,\n(b) percentage of answers during working hours\n\n-   Variety of question types attempted\n\n(a) total number of different questions attempted,\n(b) total number of different knowledge and sub knowledge areas covered,\n\n-   Depth of question types\n\n(a) mean question scores,\n(b) mean memory size of file submissions across questions\n(c) mean time consume across questions\n\n-   Level of learning effort in answers submitted\n\n(a) total number of answering attempts,\n(b) average number of different answering methods used across questions,\n(c) total memory size of file submission\n(d) total time consume for answers submitted \n\n\n::: {.cell}\n\n```{.r .cell-code}\nStudentLM_data <- merged_data_lm %>%\n  group_by(student_ID) %>%\n  summarize(\n    `Percent of submissions on weekdays` = sum(is_weekday, na.rm = TRUE) / n() * 100,\n    `Percent of submissions during working hrs` = sum(is_working_hours, na.rm = TRUE) / n() * 100,\n    `Total no. of different qns_attempted` = n_distinct(title_ID, na.rm = TRUE),\n    `Gini Index for qns in submission` = Gini(table(title_ID)),\n    `Span of different knowledge in qns` = sum(colSums(across(29:36, as.numeric)) > 0),\n    `Span of different sub knowledge in qns` = sum(colSums(across(14:28, as.numeric)) > 0),\n    `Mean selected question scores` = mean(question_score, na.rm = TRUE),\n    `Mean submission memory size by qns` = mean(sapply(split(memory, title_ID), mean, na.rm = TRUE), na.rm = TRUE),\n    `Mean timeconsume by qns` = mean(sapply(split(timeconsume, title_ID), mean, na.rm = TRUE), na.rm = TRUE),\n    `Total no. of submissions` = n(),\n    `Mean no. of different answering methods per qns` = mean(sapply(split(method, title_ID), function(x) n_distinct(x, na.rm = TRUE)), na.rm = TRUE),\n    `Gini index for answering methods used per qns` = Gini(table(method)),\n    `Total memory size of submissions` = sum(memory, na.rm = TRUE),\n    `Total timeconsume of submissions` = sum(timeconsume, na.rm = TRUE)\n  )\n\nglimpse(StudentLM_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,364\nColumns: 15\n$ student_ID                                        <chr> \"0088dc183f73c83f763…\n$ `Percent of submissions on weekdays`              <dbl> 94.88372, 88.75000, …\n$ `Percent of submissions during working hrs`       <dbl> 14.883721, 10.416667…\n$ `Total no. of different qns_attempted`            <int> 38, 38, 38, 38, 38, …\n$ `Gini Index for qns in submission`                <dbl> 0.47380661, 0.395175…\n$ `Span of different knowledge in qns`              <int> 8, 8, 8, 8, 8, 8, 8,…\n$ `Span of different sub knowledge in qns`          <int> 15, 15, 15, 15, 15, …\n$ `Mean selected question scores`                   <dbl> 2.339535, 2.266667, …\n$ `Mean submission memory size by qns`              <dbl> 249.1707, 419.3248, …\n$ `Mean timeconsume by qns`                         <dbl> 3.543709, 12.390546,…\n$ `Total no. of submissions`                        <int> 215, 240, 478, 119, …\n$ `Mean no. of different answering methods per qns` <dbl> 2.815789, 3.289474, …\n$ `Gini index for answering methods used per qns`   <dbl> 0.04279070, 0.070000…\n$ `Total memory size of submissions`                <dbl> 48164, 97820, 136496…\n$ `Total timeconsume of submissions`                <dbl> 802, 2583, 9814, 415…\n```\n:::\n:::\n\n\n#### Univariate Analysis of features\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the function to create combined box plot and histogram\ncreate_combined_plot <- function(data, variable) {\n  ggplot(data, aes_string(x = paste0(\"`\", variable, \"`\"))) +\n    # Histogram\n    geom_histogram(aes(y = ..density..), bins = 30, fill = \"skyblue\", color = \"black\", alpha = 0.7) +\n    geom_density(alpha = 0.3, fill = \"orange\") +\n    # Box plot\n    geom_boxplot(aes(y = 0), width = 0.1, color = \"red\", position = position_nudge(y = -0.1)) +\n    theme_minimal() +\n    labs(x = variable, y = \"Density\") +\n    ggtitle(paste(\"Combined Histogram and Box Plot for\", variable))\n}\n\n\n# Variables to plot\nvariables <- names(StudentLM_data)[2:15]\n\n# Create combined plots for each variable\nplots <- lapply(variables, function(var) create_combined_plot(StudentLM_data, var))\n\n# Display the plots\nfor (p in plots) {\n  print(p)\n}\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-41-1.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-41-2.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-41-3.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-41-4.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-41-5.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-41-6.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-41-7.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-41-8.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-41-9.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-41-10.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-41-11.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-41-12.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-41-13.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-41-14.png){width=1440}\n:::\n:::\n\n\n#### Check for high colinearity\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSLM.cor <- cor(StudentLM_data[, 2:15])\n\ncorrplot(SLM.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-42-1.png){width=1440}\n:::\n\n```{.r .cell-code}\nggstatsplot::ggcorrmat(\n  data = StudentLM_data, \n  cor.vars = 2:15)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-42-2.png){width=1440}\n:::\n:::\n\n\n#### Removing highly skewed and correlated columns\n\nBased on the output from the univariate and correlation analysis, 2 variables were found to be highly skewed and concentrated within 1 or 2 values, hence they are removed for more meaningful analysis, with the following code chunk. For high correlation with a threshold of >0.8, 3 variables were found to be highly correlated, of which,  2 have been removed as highly skewed, leaving total_different_questions_attempted in the data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nStudentLM_data <- StudentLM_data %>%\n  select(-`Span of different knowledge in qns`, \n#         -`Total timeconsume of submissions`, \n#         -`Total memory size of submissions`, \n#         -`Total no. of submissions`, \n#         -`Mean no. of different answering methods per qns`, \n#         -`Gini index for answering methods used per qns`, \n#         -`Total no. of different qns_attempted`, \n         -`Span of different sub knowledge in qns`)\n\nglimpse(StudentLM_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,364\nColumns: 13\n$ student_ID                                        <chr> \"0088dc183f73c83f763…\n$ `Percent of submissions on weekdays`              <dbl> 94.88372, 88.75000, …\n$ `Percent of submissions during working hrs`       <dbl> 14.883721, 10.416667…\n$ `Total no. of different qns_attempted`            <int> 38, 38, 38, 38, 38, …\n$ `Gini Index for qns in submission`                <dbl> 0.47380661, 0.395175…\n$ `Mean selected question scores`                   <dbl> 2.339535, 2.266667, …\n$ `Mean submission memory size by qns`              <dbl> 249.1707, 419.3248, …\n$ `Mean timeconsume by qns`                         <dbl> 3.543709, 12.390546,…\n$ `Total no. of submissions`                        <int> 215, 240, 478, 119, …\n$ `Mean no. of different answering methods per qns` <dbl> 2.815789, 3.289474, …\n$ `Gini index for answering methods used per qns`   <dbl> 0.04279070, 0.070000…\n$ `Total memory size of submissions`                <dbl> 48164, 97820, 136496…\n$ `Total timeconsume of submissions`                <dbl> 802, 2583, 9814, 415…\n```\n:::\n:::\n\n\n### Determine number of K-Means clusters\n\nTo determine the ideal number of clusters for K-means clustering on the recompiled learners' learning mode features, a silhouette analysis and SSE elbow method are performed in the following code chunks.\n\n#### Silhouette analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Exclude non-numeric columns\nStudentLM_data_numeric <- StudentLM_data %>%\n  select(-student_ID)\n\n# Function to compute silhouette widths\nsilhouette_analysis <- function(data, max_clusters) {\n  avg_sil_widths <- numeric(max_clusters)\n  \n  for (k in 2:max_clusters) {\n    # Perform k-means clustering\n    kmeans_result <- kmeans(data, centers = k, nstart = 25)\n    \n    # Compute silhouette widths\n    sil <- silhouette(kmeans_result$cluster, dist(data))\n    \n    # Calculate average silhouette width\n    avg_sil_widths[k] <- mean(sil[, 3])\n  }\n  \n  return(avg_sil_widths)\n}\n\n# Determine the maximum number of clusters to test\nmax_clusters <- 12\n\n# Perform silhouette analysis\navg_sil_widths <- silhouette_analysis(StudentLM_data_numeric, max_clusters)\n\n# Plot the average silhouette widths\nplot(1:max_clusters, avg_sil_widths, type = \"b\", pch = 19, frame = FALSE,\n     xlab = \"Number of clusters\", ylab = \"Average silhouette width\",\n     main = \"Silhouette Analysis for Determining Optimal Number of Clusters\")\n\n# Highlight the optimal number of clusters\noptimal_clusters <- which.max(avg_sil_widths)\npoints(optimal_clusters, avg_sil_widths[optimal_clusters], col = \"red\", pch = 19)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n\n#### SSE-Elbow method\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to compute SSE for different numbers of clusters\ncompute_sse <- function(data, max_clusters) {\n  sse <- numeric(max_clusters)\n  \n  for (k in 1:max_clusters) {\n    # Perform k-means clustering\n    kmeans_result <- kmeans(data, centers = k, nstart = 25)\n    \n    # Compute SSE\n    sse[k] <- kmeans_result$tot.withinss\n  }\n  \n  return(sse)\n}\n\n# Determine the maximum number of clusters to test\nmax_clusters <- 18\n\n# Compute SSE for each number of clusters\nsse_values <- compute_sse(StudentLM_data_numeric, max_clusters)\n\n# Plot SSE against number of clusters\nplot(1:max_clusters, sse_values, type = \"b\", pch = 19, frame = FALSE,\n     xlab = \"Number of clusters\", ylab = \"SSE\",\n     main = \"Elbow Method for Optimal Number of Clusters\")\n\n# Add text for elbow point\nelbow_point <- which.min(diff(sse_values)) + 1\ntext(elbow_point, sse_values[elbow_point], labels = paste(\"Elbow Point:\", elbow_point), pos = 4, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n\n### K Means clustering and Visualisation\n\nK Means clustering is then performed on the recompiled learners' learning mode features with the number of clusters set as 2 based on the above results, in the following code chunk\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Drop the student_ID column\nclustering_data <- StudentLM_data %>%\n  select(-student_ID)\n\n# Standardize the data\nclustering_data_scaled <- scale(clustering_data)\n\n# Perform k-means clustering\nset.seed(123)  # For reproducibility\nkmeans_result <- kmeans(clustering_data_scaled, centers = 2, nstart = 25)\n\n# Add the cluster assignments to the original data\nStudentLM_data$cluster <- kmeans_result$cluster\n```\n:::\n\n\nThe first plot for visualisation of the K means cluster is the Principal Component Analysis (PCA) Plot, which gives an initial sensing of the separation of the clusters based on first 2 PCA components that rank the highest in distinctness amongst the features used. This is plotted with the following code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform PCA\npca_result <- prcomp(StudentLM_data[-1], scale. = TRUE)\n\n# Get PCA scores\npca_scores <- as.data.frame(predict(pca_result))\n\n# Add cluster information to PCA scores\npca_scores$cluster <- factor(StudentLM_data$cluster)\n\n# Plot PCA results with cluster color coding\npca_plot <- ggplot(pca_scores, aes(PC1, PC2, color = cluster)) +\n  geom_point(size = 3) +\n  scale_color_discrete(name = \"Cluster\") +\n  labs(x = \"Principal Component 1\", y = \"Principal Component 2\",\n       title = \"PCA Plot of Clusters\") +\n  theme_minimal()\n\n# Display the plot\npca_plot\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n\nBased on the PCA plot, the clusters are visually clearly separated, suggesting that the clusters are distinct, especially in relation to the top 2 PCA components in the x and y-axis.\n\nNext to visualise the distribution of the 2 clusters across all the features used for the K Means clustering, a parallel coordinate plot is used, with the following code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nStudentLM_data_factor <- StudentLM_data\nStudentLM_data_factor$cluster <- as.character(StudentLM_data_factor$cluster)\n\nggparcoord(data = StudentLM_data_factor, \n           columns = c(2:13), \n           groupColumn = 14,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of Students' learning modes\")+\n   theme(axis.text.x = element_text(angle = 30))\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-48-1.png){width=2400}\n:::\n\n```{.r .cell-code}\nggparcoord(data = StudentLM_data_factor, \ncolumns = c(2:13), \n           groupColumn = 14,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of Students' learning modes\")+\n  facet_wrap(~ cluster)+\n  theme(axis.text.x = element_text(angle = 30))\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-48-2.png){width=2400}\n:::\n:::\n\n\nBased on the plot, there is varying degree of distinction in separation between the 2 clusters across different variables. The more distinct separation are in variables such as total timeconsume of answers, total memory size of answers, mean different answering methods per question, total answering attempts and question selection gini index, where cluster 2 tends to fare better in these metrics suggesting that perhaps cluster 2 may be the more hardworking learning mode among the 2.\n\nAn Alluvial plot is also used in the following code chunk for an alternative visualisation of the clustering, where variables are binned into 5 equally sized bins based on distribution of student_ID.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define a function to bin numerical variables based on the distribution of student_IDs\nbin_variable_equal_ids <- function(x, bins = 5) {\n  n <- length(x)\n  quantile_ranks <- ceiling(rank(x, ties.method = \"first\") / (n / bins))\n  as.factor(quantile_ranks)\n}\n\n# Apply the binning function to numerical columns, excluding student_ID and cluster\nStudentLM_data_binned <- StudentLM_data %>%\n  mutate(across(-c(student_ID, cluster), ~ bin_variable_equal_ids(., bins = 5)))\n\n# Convert data to long format\nStudentLM_data_long <- StudentLM_data_binned %>%\n  pivot_longer(cols = -c(student_ID, cluster), names_to = \"variable\", values_to = \"value\")\n\n# Check rows with NA values\nStudentLM_data_checkNA <- StudentLM_data_long %>%\n  filter(if_any(everything(), ~ is.na(.)))\n\nglimpse(StudentLM_data_checkNA)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 0\nColumns: 4\n$ student_ID <chr> \n$ cluster    <int> \n$ variable   <chr> \n$ value      <fct> \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ensure the 'cluster' variable is in discrete values (1 and 2)\nStudentLM_data_long <- StudentLM_data_long %>%\n  mutate(cluster = as.factor(cluster))\n\n# Ensure there are no NA values in the cluster column\nStudentLM_data_long <- StudentLM_data_long %>%\n  filter(!is.na(cluster))\n\n# Create the alluvial plot\nggplot(StudentLM_data_long,\n       aes(x = variable, stratum = value, alluvium = student_ID)) +\n#  geom_flow(stat = \"alluvium\", lode.guidance = \"forward\", color = \"white\") +\n  geom_alluvium(aes(fill = cluster)) +\n  geom_stratum() +\n  scale_x_discrete(limits = unique(StudentLM_data_long$variable), expand = c(0.5, 0.1)) +\n  theme_minimal() +\n  labs(title = \"Alluvial Plot of Learning Mode Clusters\",\n       x = \"Variables\",\n       y = \"Count\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))        \n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-50-1.png){width=2400}\n:::\n\n```{.r .cell-code}\n#        axis.text.y = element_text(size = 8),        plot.title = element_text(size = 12),        legend.title = element_text(size = 10),        legend.text = element_text(size = 8),        axis.title.x = element_text(size = 10),        axis.title.y = element_text(size = 10),        plot.margin = unit(c(1, 1, 1, 1), \"cm\"))\n```\n:::\n\n\n\n### Hierarchical Clustering and Visualisation\n\nAs an alternative to K means, hierarchical clustering is also considered, and initiates with mapping the data frame into a data matrix, and thereby using the dend_expend function to determine the best clustering method.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nStudentLM_data1 <- StudentLM_data  %>%\n  select(-cluster) \n#  mutate(across(everything(), scale))\n\nrow.names(StudentLM_data1) <- StudentLM_data$student_ID\n#StudentLM_data1 <- select(StudentLM_data1, c(1, 2:13))\nStudentLM_data_matrix1 <- data.matrix(StudentLM_data1)\n\nStudentLM_data_d1 <- dist(\n  normalize(StudentLM_data_matrix1[, -c(1)]), \n  method = \"euclidean\")\ndend_expend(StudentLM_data_d1)[[3]]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  dist_methods hclust_methods     optim\n1      unknown         ward.D 0.2669653\n2      unknown        ward.D2 0.3637016\n3      unknown         single 0.7571795\n4      unknown       complete 0.5926958\n5      unknown        average 0.8032403\n6      unknown       mcquitty 0.6096951\n7      unknown         median 0.6870881\n8      unknown       centroid 0.7422864\n```\n:::\n:::\n\n\nBased on the output above, the average method will be the most optimal.\n\nA silhoutte plot in the same approach as before is also done with the following code chunk to determine the optimal number of clusters to achieve higher distinction in cluster separation for hierarchical clustering.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nStudentLM_data_clust <- hclust(StudentLM_data_d1, method = \"average\")\nnum_k <- find_k(StudentLM_data_clust)\nplot(num_k)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-52-1.png){width=672}\n:::\n:::\n\n\nBased on the output above, 9 clusters were identified to be optimal in terms of distinction in separation. \n\nNow using the 2 parameters, the hierarchical clustering using an interactive heatmap for visualisation is plot with the following code chunk.\n\n```{}\nheatmaply(normalize(StudentLM_data_matrix[, -c(1)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"average\",\n          k_row = 10,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,          \n          main=\"Students' Learning Mode Clustering \\nDataTransformation using Normalise Method\",\n          xlab = \"Student_IDs\",\n          ylab = \"Learning Mode Features\"\n)\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Cut the tree into a 9 clusters\ncluster_cut <- cutree(StudentLM_data_clust, k = 9)\n\n# Add the cluster assignment to the data\nStudentLM_data1_n <- normalize(StudentLM_data1)\n\nStudentLM_data1_n$cluster_hc <- as.factor(cluster_cut)\n\nglimpse(StudentLM_data1_n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,364\nColumns: 14\n$ student_ID                                        <chr> \"0088dc183f73c83f763…\n$ `Percent of submissions on weekdays`              <dbl> 0.9488372, 0.8875000…\n$ `Percent of submissions during working hrs`       <dbl> 0.14883721, 0.104166…\n$ `Total no. of different qns_attempted`            <dbl> 1.0000000, 1.0000000…\n$ `Gini Index for qns in submission`                <dbl> 0.66600804, 0.555479…\n$ `Mean selected question scores`                   <dbl> 0.6515011, 0.6160606…\n$ `Mean submission memory size by qns`              <dbl> 0.15476836, 0.288330…\n$ `Mean timeconsume by qns`                         <dbl> 0.05099268, 0.406939…\n$ `Total no. of submissions`                        <dbl> 0.25330132, 0.283313…\n$ `Mean no. of different answering methods per qns` <dbl> 0.51492537, 0.649253…\n$ `Gini index for answering methods used per qns`   <dbl> 0.16432955, 0.294312…\n$ `Total memory size of submissions`                <dbl> 0.06864675, 0.139881…\n$ `Total timeconsume of submissions`                <dbl> 0.043706487, 0.14211…\n$ cluster_hc                                        <fct> 1, 1, 1, 1, 1, 1, 1,…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform PCA\npca_result <- prcomp(StudentLM_data1_n[, -c(1, 14)], scale = FALSE)\npca_df <- as.data.frame(pca_result$x[, 1:2])  # Example: Extracting the first two principal components\n\n# Add cluster information to PCA scores\npca_scores$cluster_hc <- factor(StudentLM_data1_n$cluster_hc)\n\n# Plot PCA with cluster_hc\nggplot(pca_df, aes(x = PC1, y = PC2, color = factor(StudentLM_data1_n$cluster_hc))) +\n  geom_point() +\n  labs(title = \"PCA Plot with Clustering\", x = \"Principal Component 1\", y = \"Principal Component 2\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggparcoord(data = StudentLM_data1_n, \n           columns = c(2:13), \n           groupColumn = 14,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of Students' learning modes\")+\n   theme(axis.text.x = element_text(angle = 30))\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-55-1.png){width=2400}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define a function to bin numerical variables based on the distribution of student_IDs\nbin_variable_equal_ids <- function(x, bins = 5) {\n  n <- length(x)\n  quantile_ranks <- ceiling(rank(x, ties.method = \"first\") / (n / bins))\n  as.factor(quantile_ranks)\n}\n\n# Apply the binning function to numerical columns, excluding student_ID and cluster\nStudentLM_data_binned1 <- StudentLM_data1_n %>%\n  mutate(across(-c(student_ID, cluster_hc), ~ bin_variable_equal_ids(., bins = 5)))\n\n# Convert data to long format\nStudentLM_data_long1 <- StudentLM_data_binned1 %>%\n  pivot_longer(cols = -c(student_ID, cluster_hc), names_to = \"variable\", values_to = \"value\")\n\n# Check rows with NA values\nStudentLM_data_checkNA <- StudentLM_data_long1 %>%\n  filter(if_any(everything(), ~ is.na(.)))\n\nglimpse(StudentLM_data_checkNA)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 0\nColumns: 4\n$ student_ID <chr> \n$ cluster_hc <fct> \n$ variable   <chr> \n$ value      <fct> \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ensure the 'cluster' variable is in discrete values (1 and 2)\nStudentLM_data_long1 <- StudentLM_data_long1 %>%\n  mutate(cluster_hc = as.factor(cluster_hc))\n\n# Ensure there are no NA values in the cluster column\nStudentLM_data_long1 <- StudentLM_data_long1 %>%\n  filter(!is.na(cluster_hc))\n\n# Create the alluvial plot\nggplot(StudentLM_data_long1,\n       aes(x = variable, stratum = value, alluvium = student_ID)) +\n#  geom_flow(stat = \"alluvium\", lode.guidance = \"forward\", color = \"white\") +\n  geom_alluvium(aes(fill = cluster_hc)) +\n  geom_stratum() +\n  scale_x_discrete(limits = unique(StudentLM_data_long$variable), expand = c(0.5, 0.1)) +\n  theme_minimal() +\n  labs(title = \"Alluvial Plot of Learning Mode Clusters\",\n       x = \"Variables\",\n       y = \"Count\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8),\n        axis.text.y = element_text(size = 8),\n        plot.title = element_text(size = 12),\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 8),\n        axis.title.x = element_text(size = 10),\n        axis.title.y = element_text(size = 10),\n        plot.margin = unit(c(1, 1, 1, 1), \"cm\"))\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-57-1.png){width=2400}\n:::\n:::\n\n\n## Knowledge Acquisition\n\nBased on the given data, the relevant features that best defines a learner's knowledge acquisition is assessed to be as follows:\n\n-   knowledge mastery determined by (a) overall sum of highest actual score for each question attempted and (b) sum of highest actual score of each question by knowledge area\n-   correct answering rate determined by (a) percentage of answers absolutely correct, (b) total number of questions with answers absolutely correct and partially correct\n-   \n\n### Feature engineering\n\n#### Group By Student ID\n\nThe following variables will be obtained with the code chunks below in preparation for visualisation and analysis of Knowledge Acquisition with respect to the various learning modes.\n\n-   knowledge mastery\n\n(a) overall sum of highest actual score for each question attempted and\n(b) sum of highest actual score of each question by knowledge area\n\n-   correct answering rate\n\n(a) percentage of answers absolutely correct,\n(b) total number of questions with answers absolutely correct and partially correct\n\n-   Combined Metric\n\nPoint score based on:\n\n  -   Proportion of absolutely and partially correct attempts: \n    -   absolutely correct attempts - award 1 pt\n    -   partially correct attempts - award (actual_score / question_score)\n    -   normalise attempts across questions - uses (total point / total attempts)  \n  -   use more than 1 method per question - multiply by no. of methods\n\n(a) overall total point score\n(b) sum of point score by knowledge group\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nStudentKA_data <- merged_data %>%\n  group_by(student_ID) %>%\n  summarize(\n    # Part (a): Sum of highest actual score for each question attempted\n    `Sum of overall highest submission scores` = sum(sapply(unique(title_ID), function(x) {\n      max(merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, \"actual_score\"])\n    })),\n    \n    # Part (b): Sum of highest actual score for each knowledge area\n    `Sum of overall highest submission scores for b3C9s knowledge` = sum(sapply(unique(title_ID), function(x) {\n      max(merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, \"actual_score\"] * merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, 29])\n    })),\n    `Sum of overall highest submission scores for g7R2j knowledge` = sum(sapply(unique(title_ID), function(x) {\n      max(merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, \"actual_score\"] * merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, 30])\n    })),\n    `Sum of overall highest submission scores for k4W1c knowledge` = sum(sapply(unique(title_ID), function(x) {\n      max(merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, \"actual_score\"] * merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, 31])\n    })),\n    `Sum of overall highest submission scores for m3D1v knowledge` = sum(sapply(unique(title_ID), function(x) {\n      max(merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, \"actual_score\"] * merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, 32])\n    })),\n    `Sum of overall highest submission scores for r8S3g knowledge` = sum(sapply(unique(title_ID), function(x) {\n      max(merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, \"actual_score\"] * merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, 33])\n    })),\n    `Sum of overall highest submission scores for s8Y2f knowledge` = sum(sapply(unique(title_ID), function(x) {\n      max(merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, \"actual_score\"] * merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, 34])\n    })),\n    `Sum of overall highest submission scores for t5V9e knowledge` = sum(sapply(unique(title_ID), function(x) {\n      max(merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, \"actual_score\"] * merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, 35])\n    })),\n    `Sum of overall highest submission scores for y9W5d knowledge` = sum(sapply(unique(title_ID), function(x) {\n      max(merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, \"actual_score\"] * merged_data[merged_data$title_ID == x & merged_data$student_ID == cur_group()$student_ID, 36])\n    })),\n    \n    # Part (c): Percentage of answers absolutely correct\n    `Percent of submissions absolutely correct` = (sum(state == \"Absolutely_Correct\") / n()) * 100,\n    \n    # Part (d): Total number of questions with answers absolutely correct and partially correct\n    `No. of questions answered fully or partially correct` = length(unique(title_ID[state %in% c(\"Partially_Correct\", \"Absolutely_Correct\")]))\n    \n  )\n\n\nglimpse(StudentKA_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,364\nColumns: 12\n$ student_ID                                                     <chr> \"0088dc…\n$ `Sum of overall highest submission scores`                     <dbl> 100, 10…\n$ `Sum of overall highest submission scores for b3C9s knowledge` <dbl> 10, 10,…\n$ `Sum of overall highest submission scores for g7R2j knowledge` <dbl> 15, 15,…\n$ `Sum of overall highest submission scores for k4W1c knowledge` <dbl> 3, 3, 3…\n$ `Sum of overall highest submission scores for m3D1v knowledge` <dbl> 36, 36,…\n$ `Sum of overall highest submission scores for r8S3g knowledge` <dbl> 5, 5, 5…\n$ `Sum of overall highest submission scores for s8Y2f knowledge` <dbl> 3, 3, 3…\n$ `Sum of overall highest submission scores for t5V9e knowledge` <dbl> 10, 10,…\n$ `Sum of overall highest submission scores for y9W5d knowledge` <dbl> 33, 33,…\n$ `Percent of submissions absolutely correct`                    <dbl> 20.9302…\n$ `No. of questions answered fully or partially correct`         <int> 38, 38,…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Assign points to attempts based on state\nadjusted_scores <- merged_data %>%\n  mutate(points = case_when(\n    state == \"Absolutely_Correct\" ~ 1,\n    state == \"Partially_Correct\" ~ actual_score / question_score,\n    TRUE ~ 0 # default case for any unexpected states\n  ))\n\n# Assign points to title_IDs per student factoring in normalisation and multiple methods used\nmastery_scores1 <- adjusted_scores %>%\n  group_by(student_ID, title_ID, knowledge, class) %>%\n  summarise(\n    total_points = sum(points),\n    total_attempts = n(),\n    unique_methods = n_distinct(method),\n    absolutely_correct_methods = sum(points == 1)\n  ) %>%\n  mutate(\n    adjusted_points = total_points / total_attempts,\n    adjusted_points = adjusted_points * ifelse(absolutely_correct_methods > 0, unique_methods, 1)\n  )\n\nglimpse(mastery_scores1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 50,482\nColumns: 9\nGroups: student_ID, title_ID, knowledge [50,482]\n$ student_ID                 <chr> \"0088dc183f73c83f763e\", \"0088dc183f73c83f76…\n$ title_ID                   <chr> \"Question_3MwAFlmNO8EKrpY5zjUd\", \"Question_…\n$ knowledge                  <chr> \"t5V9e\", \"t5V9e\", \"m3D1v\", \"g7R2j\", \"y9W5d\"…\n$ class                      <chr> \"Class2\", \"Class2\", \"Class2\", \"Class2\", \"Cl…\n$ total_points               <dbl> 1.000000, 1.000000, 4.666667, 7.666667, 1.0…\n$ total_attempts             <int> 23, 9, 7, 22, 1, 1, 2, 4, 8, 11, 1, 1, 5, 1…\n$ unique_methods             <int> 5, 4, 5, 5, 1, 1, 1, 2, 5, 5, 1, 1, 2, 1, 1…\n$ absolutely_correct_methods <int> 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1…\n$ adjusted_points            <dbl> 0.2173913, 0.4444444, 3.3333333, 1.7424242,…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(mastery_scores1$knowledge)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"t5V9e\"       \"m3D1v\"       \"g7R2j\"       \"y9W5d\"       \"r8S3g\"      \n [6] \"b3C9s\"       \"y9W5d_m3D1v\" \"y9W5d_k4W1c\" \"g7R2j_m3D1v\" \"y9W5d_s8Y2f\"\n```\n:::\n:::\n\n  rename(knowledge = knowledge.x) %>%\n  select(-score,\n         -knowledge.y)\n\n::: {.cell}\n\n```{.r .cell-code}\n# Combine the adjusted score with knowledge-transposed titleInfo dataframe\nmastery_scores2 <- df_TitleInfo_gp %>%\n  distinct(title_ID, .keep_all = TRUE) %>%\n  left_join(mastery_scores1, by = \"title_ID\") %>%\n  rename(knowledge = knowledge.x) %>%\n  select(-score,\n         -knowledge.y)\n  \nglimpse(mastery_scores2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 50,482\nColumns: 33\n$ title_ID                   <chr> \"Question_3MwAFlmNO8EKrpY5zjUd\", \"Question_…\n$ b3C9s_j0v1yls8             <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ b3C9s_l4z6od7y             <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ g7R2j_e0v1yls8             <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ g7R2j_j1g8gd3v             <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ k4W1c_h5r6nux7             <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ m3D1v_r1d7fr3l             <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ m3D1v_t0v5ts9h             <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ m3D1v_v3d9is1x             <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ r8S3g_l0p5viby             <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ r8S3g_n0m9rsw4             <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ s8Y2f_v4x8by9j             <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ t5V9e_e1k6cixp             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ y9W5d_c0w4mj5h             <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ y9W5d_e2j7p95s             <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ y9W5d_p8g6dgtv             <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ b3C9s                      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ g7R2j                      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ k4W1c                      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ m3D1v                      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ r8S3g                      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ s8Y2f                      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ t5V9e                      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ y9W5d                      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ knowledge                  <chr> \"t5V9e\", \"t5V9e\", \"t5V9e\", \"t5V9e\", \"t5V9e\"…\n$ sub_knowledge              <chr> \"t5V9e_e1k6cixp\", \"t5V9e_e1k6cixp\", \"t5V9e_…\n$ student_ID                 <chr> \"0088dc183f73c83f763e\", \"00cbf05221bb479e66…\n$ class                      <chr> \"Class2\", \"Class10\", \"Class14\", \"Class5\", \"…\n$ total_points               <dbl> 1.0, 3.0, 6.5, 3.5, 1.0, 8.5, 3.0, 13.5, 7.…\n$ total_attempts             <int> 23, 9, 23, 6, 11, 19, 14, 37, 15, 8, 58, 23…\n$ unique_methods             <int> 5, 5, 5, 3, 5, 5, 5, 5, 4, 4, 5, 5, 1, 5, 2…\n$ absolutely_correct_methods <int> 1, 1, 2, 1, 1, 1, 1, 4, 2, 1, 8, 3, 1, 2, 1…\n$ adjusted_points            <dbl> 0.2173913, 1.6666667, 1.4130435, 1.7500000,…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summing up points for Overall and Specific Knowledge Mastery for each Student\nmastery_scores <- mastery_scores2 %>%\n  group_by(student_ID) %>%\n  summarize(\n    # Part (a): Sum of total points across all questions\n    `Sum of points Overall` = sum(adjusted_points),\n    \n    # Part (b): Sum of highest actual score for each knowledge area\n    `Sum of points for b3C9s knowledge` = sum(case_when(\n      b3C9s == 1 ~ adjusted_points,\n      TRUE ~ 0\n    )),\n    \n    `Sum of points for g7R2j knowledge` = sum(case_when(\n      g7R2j == 1 ~ adjusted_points,\n      TRUE ~ 0\n    )),\n    \n    `Sum of points for k4W1c knowledge` = sum(case_when(\n      k4W1c == 1 ~ adjusted_points,\n      TRUE ~ 0\n    )),\n    \n    `Sum of points for m3D1v knowledge` = sum(case_when(\n      m3D1v == 1 ~ adjusted_points,\n      TRUE ~ 0\n    )),\n    \n    `Sum of points for r8S3g knowledge` = sum(case_when(\n      r8S3g == 1 ~ adjusted_points,\n      TRUE ~ 0\n    )),\n    \n    `Sum of points for s8Y2f knowledge` = sum(case_when(\n      s8Y2f == 1 ~ adjusted_points,\n      TRUE ~ 0\n    )),\n    \n    `Sum of points for t5V9e knowledge` = sum(case_when(\n      t5V9e == 1 ~ adjusted_points,\n      TRUE ~ 0\n    )),\n    \n    `Sum of points for y9W5d knowledge` = sum(case_when(\n      y9W5d == 1 ~ adjusted_points,\n      TRUE ~ 0\n    ))\n    \n  )\n\nglimpse(mastery_scores)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,364\nColumns: 10\n$ student_ID                          <chr> \"0088dc183f73c83f763e\", \"00cbf0522…\n$ `Sum of points Overall`             <dbl> 38.75682, 35.69721, 35.28832, 42.3…\n$ `Sum of points for b3C9s knowledge` <dbl> 3.0000000, 2.6000000, 1.3629877, 3…\n$ `Sum of points for g7R2j knowledge` <dbl> 6.742424, 4.350000, 6.414352, 5.85…\n$ `Sum of points for k4W1c knowledge` <dbl> 1.1666667, 2.0000000, 0.6666667, 1…\n$ `Sum of points for m3D1v knowledge` <dbl> 14.000000, 11.457143, 13.645238, 1…\n$ `Sum of points for r8S3g knowledge` <dbl> 4.047009, 3.172682, 2.829832, 3.90…\n$ `Sum of points for s8Y2f knowledge` <dbl> 0.9523810, 1.0666667, 0.5000000, 0…\n$ `Sum of points for t5V9e knowledge` <dbl> 3.967391, 5.545672, 3.220736, 4.84…\n$ `Sum of points for y9W5d knowledge` <dbl> 11.666667, 11.871717, 11.958028, 1…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compiling the knowledge acquisition metrics\nStudentKA_data_merged <- left_join(StudentKA_data, mastery_scores, by = \"student_ID\")\n\nglimpse(StudentKA_data_merged)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,364\nColumns: 21\n$ student_ID                                                     <chr> \"0088dc…\n$ `Sum of overall highest submission scores`                     <dbl> 100, 10…\n$ `Sum of overall highest submission scores for b3C9s knowledge` <dbl> 10, 10,…\n$ `Sum of overall highest submission scores for g7R2j knowledge` <dbl> 15, 15,…\n$ `Sum of overall highest submission scores for k4W1c knowledge` <dbl> 3, 3, 3…\n$ `Sum of overall highest submission scores for m3D1v knowledge` <dbl> 36, 36,…\n$ `Sum of overall highest submission scores for r8S3g knowledge` <dbl> 5, 5, 5…\n$ `Sum of overall highest submission scores for s8Y2f knowledge` <dbl> 3, 3, 3…\n$ `Sum of overall highest submission scores for t5V9e knowledge` <dbl> 10, 10,…\n$ `Sum of overall highest submission scores for y9W5d knowledge` <dbl> 33, 33,…\n$ `Percent of submissions absolutely correct`                    <dbl> 20.9302…\n$ `No. of questions answered fully or partially correct`         <int> 38, 38,…\n$ `Sum of points Overall`                                        <dbl> 38.7568…\n$ `Sum of points for b3C9s knowledge`                            <dbl> 3.00000…\n$ `Sum of points for g7R2j knowledge`                            <dbl> 6.74242…\n$ `Sum of points for k4W1c knowledge`                            <dbl> 1.16666…\n$ `Sum of points for m3D1v knowledge`                            <dbl> 14.0000…\n$ `Sum of points for r8S3g knowledge`                            <dbl> 4.04700…\n$ `Sum of points for s8Y2f knowledge`                            <dbl> 0.95238…\n$ `Sum of points for t5V9e knowledge`                            <dbl> 3.96739…\n$ `Sum of points for y9W5d knowledge`                            <dbl> 11.6666…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the function to create combined box plot and histogram\ncreate_combined_plot <- function(data, variable) {\n  ggplot(data, aes_string(x = paste0(\"`\", variable, \"`\"))) +\n    # Histogram\n    geom_histogram(aes(y = ..density..), bins = 30, fill = \"skyblue\", color = \"black\", alpha = 0.7) +\n    geom_density(alpha = 0.3, fill = \"orange\") +\n    # Box plot\n    geom_boxplot(aes(y = 0), width = 0.1, color = \"red\", position = position_nudge(y = -0.1)) +\n    theme_minimal() +\n    labs(x = variable, y = \"Density\") +\n    ggtitle(paste(\"Combined Histogram and Box Plot for\", variable))\n}\n\n\n# Variables to plot\nvariables <- names(StudentKA_data_merged)[2:21]\n\n# Create combined plots for each variable\nplots <- lapply(variables, function(var) create_combined_plot(StudentKA_data_merged, var))\n\n# Display the plots\nfor (p in plots) {\n  print(p)\n}\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-1.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-2.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-3.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-4.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-5.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-6.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-7.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-8.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-9.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-10.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-11.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-12.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-13.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-14.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-15.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-16.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-17.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-18.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-19.png){width=1440}\n:::\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-64-20.png){width=1440}\n:::\n:::\n\n\n\n#### Removing highly skewed columns\n\nInspecting the data frame, 4 variables were found to be highly skewed and concentrated within a small range of values, hence they are removed for more meaningful analysis, with the following code chunk.\n\n```{}\nStudentKA_data_merged <- StudentKA_data_merged %>%\n  select(-sum_highest_actual_score_k4W1c, -sum_highest_actual_score_s8Y2f, -sum_points_k4W1c, -sum_points_s8Y2f)\n\nglimpse(StudentKA_data_merged)\n```\n\n### Merging Students' Learning Modes with Knowledge Acqusition features\n\nWith the both data frames prepared, they will now be merged for the next sub-task which involves comparison of learners' knowledge acqusition in respect to learning mode, and subsequently to identify patterns and relationship\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Join the two dataframes on the column student_ID\nStudentLMKA_data <- left_join(StudentLM_data, StudentKA_data_merged, by = \"student_ID\")\n\nglimpse(StudentLMKA_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,364\nColumns: 34\n$ student_ID                                                     <chr> \"0088dc…\n$ `Percent of submissions on weekdays`                           <dbl> 94.8837…\n$ `Percent of submissions during working hrs`                    <dbl> 14.8837…\n$ `Total no. of different qns_attempted`                         <int> 38, 38,…\n$ `Gini Index for qns in submission`                             <dbl> 0.47380…\n$ `Mean selected question scores`                                <dbl> 2.33953…\n$ `Mean submission memory size by qns`                           <dbl> 249.170…\n$ `Mean timeconsume by qns`                                      <dbl> 3.54370…\n$ `Total no. of submissions`                                     <int> 215, 24…\n$ `Mean no. of different answering methods per qns`              <dbl> 2.81578…\n$ `Gini index for answering methods used per qns`                <dbl> 0.04279…\n$ `Total memory size of submissions`                             <dbl> 48164, …\n$ `Total timeconsume of submissions`                             <dbl> 802, 25…\n$ cluster                                                        <int> 1, 2, 2…\n$ `Sum of overall highest submission scores`                     <dbl> 100, 10…\n$ `Sum of overall highest submission scores for b3C9s knowledge` <dbl> 10, 10,…\n$ `Sum of overall highest submission scores for g7R2j knowledge` <dbl> 15, 15,…\n$ `Sum of overall highest submission scores for k4W1c knowledge` <dbl> 3, 3, 3…\n$ `Sum of overall highest submission scores for m3D1v knowledge` <dbl> 36, 36,…\n$ `Sum of overall highest submission scores for r8S3g knowledge` <dbl> 5, 5, 5…\n$ `Sum of overall highest submission scores for s8Y2f knowledge` <dbl> 3, 3, 3…\n$ `Sum of overall highest submission scores for t5V9e knowledge` <dbl> 10, 10,…\n$ `Sum of overall highest submission scores for y9W5d knowledge` <dbl> 33, 33,…\n$ `Percent of submissions absolutely correct`                    <dbl> 20.9302…\n$ `No. of questions answered fully or partially correct`         <int> 38, 38,…\n$ `Sum of points Overall`                                        <dbl> 38.7568…\n$ `Sum of points for b3C9s knowledge`                            <dbl> 3.00000…\n$ `Sum of points for g7R2j knowledge`                            <dbl> 6.74242…\n$ `Sum of points for k4W1c knowledge`                            <dbl> 1.16666…\n$ `Sum of points for m3D1v knowledge`                            <dbl> 14.0000…\n$ `Sum of points for r8S3g knowledge`                            <dbl> 4.04700…\n$ `Sum of points for s8Y2f knowledge`                            <dbl> 0.95238…\n$ `Sum of points for t5V9e knowledge`                            <dbl> 3.96739…\n$ `Sum of points for y9W5d knowledge`                            <dbl> 11.6666…\n```\n:::\n:::\n\n\n### Visualisation of Knowledge Aquisition by learning mode clusters\n\nTo visualise differences in the performance in total number of questions that had correct or partially correct answers, a ridgeline plot to compare the shape of distribution of students in both clusters in the same axis, using the following code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nStudentLMKA_data$cluster <- as.factor(StudentLMKA_data$cluster)\n\n# Plot\nggplot(StudentLMKA_data, \n       aes(x = `No. of questions answered fully or partially correct`, \n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-66-1.png){width=1152}\n:::\n\n```{.r .cell-code}\nggplot(StudentLMKA_data, \n       aes(x = `Sum of points Overall`, \n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-66-2.png){width=1152}\n:::\n:::\n\n\nCluster 2 has a sharper peak and more packed to the right which suggests that students in this cluster generally performed better, while for cluster 1 there is a 2nd smaller group of that performs even worse.\n\nA multi faceted plot to compare the distribution of answering performance in respect to the 2 clusters across 6 knowledge areas is plot with the following code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#| fig-width: 12\n#| fig-height: 7\n\n#a <- \nggplot(StudentLMKA_data, \n       aes(x = `Sum of points for b3C9s knowledge`,\n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-67-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#b <- \nggplot(StudentLMKA_data, \n       aes(x = `Sum of points for g7R2j knowledge`,\n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-67-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#c <- \nggplot(StudentLMKA_data, \n       aes(x = `Sum of points for m3D1v knowledge`, \n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-67-3.png){width=672}\n:::\n\n```{.r .cell-code}\n#d <- \n  ggplot(StudentLMKA_data, \n       aes(x = `Sum of points for r8S3g knowledge`, \n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-67-4.png){width=672}\n:::\n\n```{.r .cell-code}\n#e <- \n  ggplot(StudentLMKA_data, \n       aes(x = `Sum of points for t5V9e knowledge`, \n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-67-5.png){width=672}\n:::\n\n```{.r .cell-code}\n#f <- \n  ggplot(StudentLMKA_data, \n       aes(x = `Sum of points for y9W5d knowledge`, \n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-67-6.png){width=672}\n:::\n\n```{.r .cell-code}\n#g <- \nggplot(StudentLMKA_data, \n       aes(x = `Sum of points for k4W1c knowledge`, \n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-67-7.png){width=672}\n:::\n\n```{.r .cell-code}\n#h <- \n  ggplot(StudentLMKA_data, \n       aes(x = `Sum of points for s8Y2f knowledge`, \n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-67-8.png){width=672}\n:::\n\n```{.r .cell-code}\n#(a + b) / (c + d) / (e + f) / (g + h)\n```\n:::\n\n\nThe findings are highly congruent with the earlier ridge plot, which found that cluster 2 had performed better with a sharper peak and more concentration of learners to the right, where as cluster 1 had small pockets of learners to the left instead.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#a <- \n  ggplot(StudentLMKA_data, \n       aes(x = `Sum of overall highest submission scores for b3C9s knowledge`, \n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-68-1.png){width=1152}\n:::\n\n```{.r .cell-code}\n#b <- \n  ggplot(StudentLMKA_data, \n       aes(x = `Sum of overall highest submission scores for g7R2j knowledge`,\n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-68-2.png){width=1152}\n:::\n\n```{.r .cell-code}\n#c <- \n  ggplot(StudentLMKA_data, \n       aes(x = `Sum of overall highest submission scores for m3D1v knowledge`,\n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-68-3.png){width=1152}\n:::\n\n```{.r .cell-code}\n#d <- \n  ggplot(StudentLMKA_data, \n       aes(x = `Sum of overall highest submission scores for r8S3g knowledge`, \n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-68-4.png){width=1152}\n:::\n\n```{.r .cell-code}\n#e <- \n  ggplot(StudentLMKA_data, \n       aes(x = `Sum of overall highest submission scores for t5V9e knowledge`, \n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-68-5.png){width=1152}\n:::\n\n```{.r .cell-code}\n#f <- \n  ggplot(StudentLMKA_data, \n       aes(x = `Sum of overall highest submission scores for y9W5d knowledge`, \n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-68-6.png){width=1152}\n:::\n\n```{.r .cell-code}\n#g <- \n  ggplot(StudentLMKA_data, \n       aes(x = `Sum of overall highest submission scores for k4W1c knowledge`, \n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-68-7.png){width=1152}\n:::\n\n```{.r .cell-code}\n#h <- \n  ggplot(StudentLMKA_data, \n       aes(x = `Sum of overall highest submission scores for s8Y2f knowledge`, \n           y = cluster,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-68-8.png){width=1152}\n:::\n\n```{.r .cell-code}\n#(a + b) / (c + d) / (e + f) / (g + h)\n```\n:::\n\n\nA statistical violin plot to perform both a mathematical 2 sample mean test in tandem with a visual analysis of the difference in the distribution of the students' total actual score in the answering records in respect of the 2 clusters is plot with the following code chunk.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = StudentLMKA_data,\n  x = cluster, \n  y = `Sum of overall highest submission scores`,\n  type = \"np\",\n  messages = FALSE\n)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-69-1.png){width=672}\n:::\n:::\n\n\nBased on the figures, the p-value is extremely small which suggest that there is strong statistical significance between the 2 clusters in the performance of total actual score of students in each cluster, wherein cluster 2 fared better than cluster 1, it also shows that cluster 2 is much smaller than cluster 1.\n\nLastly a similar statistical violin plot to analyse the differences in percentage of answers that were absolutely correct in respect of the 2 clusters is plot in the following code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = StudentLMKA_data,\n  x = cluster, \n  y = `Percent of submissions absolutely correct`,\n  type = \"np\",\n  messages = FALSE\n)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-70-1.png){width=672}\n:::\n:::\n\n\nBased on the figures, the p-value is extremely small which suggest that there is strong statistical significance between the 2 clusters in the performance of total actual score of students in each cluster, wherein surprisingly, cluster 1 had fared better than cluster 2, cluster 2 had a smaller spread and more concentrated compared to cluster 1.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = StudentLMKA_data,\n  x = cluster, \n  y = `Sum of points Overall`,\n  type = \"np\",\n  messages = FALSE\n)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-71-1.png){width=672}\n:::\n:::\n\n\n## Bivariate and Multivariate analysis of variables\n\nstudent_ID\n`Percent of submissions on weekdays`\n`Percent of submissions during working hrs`\n`Total no. of different qns_attempted`\n`Gini Index for qns in submission`\n`Mean selected question scores`\n`Mean submission memory size by qns`\n`Mean timeconsume by qns`\n`Total no. of submissions`\n`Mean no. of different answering methods per qns`\n`Gini index for answering methods used per qns`\n`Total memory size of submissions`\n`Total timeconsume of submissions` \n`Sum of overall highest submission scores`\n`Sum of overall highest submission scores for b3C9s knowledge`\n`Sum of overall highest submission scores for g7R2j knowledge`\n`Sum of overall highest submission scores for k4W1c knowledge`\n`Sum of overall highest submission scores for m3D1v knowledge`\n`Sum of overall highest submission scores for r8S3g knowledge`\n`Sum of overall highest submission scores for s8Y2f knowledge`\n`Sum of overall highest submission scores for t5V9e knowledge`\n`Sum of overall highest submission scores for y9W5d knowledge`\n`Percent of submissions absolutely correct`\n`No. of questions answered fully or partially correct`\n`Sum of points Overall`\n`Sum of points for b3C9s knowledge`\n`Sum of points for g7R2j knowledge`\n`Sum of points for k4W1c knowledge`\n`Sum of points for m3D1v knowledge`\n`Sum of points for r8S3g knowledge`\n`Sum of points for s8Y2f knowledge`\n`Sum of points for t5V9e knowledge`\n`Sum of points for y9W5d knowledge` \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Multi linear regression model for sum_highest_actual_score and sum_points overall\nmodel1 <- lm(`Sum of overall highest submission scores` ~ \n               `Percent of submissions on weekdays`+\n               `Percent of submissions during working hrs`+\n               `Total no. of different qns_attempted`+\n               `Gini Index for qns in submission`+\n               `Mean selected question scores`+\n               `Mean submission memory size by qns`+\n               `Mean timeconsume by qns`+\n               `Total no. of submissions`+\n               `Mean no. of different answering methods per qns`+\n               `Gini index for answering methods used per qns`+\n               `Total memory size of submissions`+\n               `Total timeconsume of submissions`, data = StudentLMKA_data)\nmodel2 <- lm(`Sum of points Overall` ~  \n               `Percent of submissions on weekdays`+\n               `Percent of submissions during working hrs`+\n               `Total no. of different qns_attempted`+\n               `Gini Index for qns in submission`+\n               `Mean selected question scores`+\n               `Mean submission memory size by qns`+\n               `Mean timeconsume by qns`+\n               `Total no. of submissions`+\n               `Mean no. of different answering methods per qns`+\n               `Gini index for answering methods used per qns`+\n               `Total memory size of submissions`+\n               `Total timeconsume of submissions`, data = StudentLMKA_data)\n\n\nggcoefstats(model1, \n            output = \"plot\") +\n  theme(\n    plot.title = element_text(size = 16),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12),\n    legend.title = element_text(size = 14),\n    legend.text = element_text(size = 12)\n  )\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-72-1.png){width=1728}\n:::\n\n```{.r .cell-code}\nggcoefstats(model2, \n            output = \"plot\") +\n    theme(\n    plot.title = element_text(size = 16),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12),\n    legend.title = element_text(size = 14),\n    legend.text = element_text(size = 12)\n  )\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-72-2.png){width=1728}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel3 <- lm(`Sum of points for b3C9s knowledge` ~  \n               `Percent of submissions on weekdays`+\n               `Percent of submissions during working hrs`+\n               `Total no. of different qns_attempted`+\n               `Gini Index for qns in submission`+\n               `Mean selected question scores`+\n               `Mean submission memory size by qns`+\n               `Mean timeconsume by qns`+\n               `Total no. of submissions`+\n               `Mean no. of different answering methods per qns`+\n               `Gini index for answering methods used per qns`+\n               `Total memory size of submissions`+\n               `Total timeconsume of submissions`, data = StudentLMKA_data)\nmodel4 <- lm(`Sum of points for g7R2j knowledge` ~ \n               `Percent of submissions on weekdays`+\n               `Percent of submissions during working hrs`+\n               `Total no. of different qns_attempted`+\n               `Gini Index for qns in submission`+\n               `Mean selected question scores`+\n               `Mean submission memory size by qns`+\n               `Mean timeconsume by qns`+\n               `Total no. of submissions`+\n               `Mean no. of different answering methods per qns`+\n               `Gini index for answering methods used per qns`+\n               `Total memory size of submissions`+\n               `Total timeconsume of submissions`, data = StudentLMKA_data)\nmodel5 <- lm(`Sum of points for k4W1c knowledge` ~  \n               `Percent of submissions on weekdays`+\n               `Percent of submissions during working hrs`+\n               `Total no. of different qns_attempted`+\n               `Gini Index for qns in submission`+\n               `Mean selected question scores`+\n               `Mean submission memory size by qns`+\n               `Mean timeconsume by qns`+\n               `Total no. of submissions`+\n               `Mean no. of different answering methods per qns`+\n               `Gini index for answering methods used per qns`+\n               `Total memory size of submissions`+\n               `Total timeconsume of submissions`, data = StudentLMKA_data)\nmodel6 <- lm(`Sum of points for m3D1v knowledge` ~  \n               `Percent of submissions on weekdays`+\n               `Percent of submissions during working hrs`+\n               `Total no. of different qns_attempted`+\n               `Gini Index for qns in submission`+\n               `Mean selected question scores`+\n               `Mean submission memory size by qns`+\n               `Mean timeconsume by qns`+\n               `Total no. of submissions`+\n               `Mean no. of different answering methods per qns`+\n               `Gini index for answering methods used per qns`+\n               `Total memory size of submissions`+\n               `Total timeconsume of submissions`, data = StudentLMKA_data)\nmodel7 <- lm(`Sum of points for r8S3g knowledge` ~ \n               `Percent of submissions on weekdays`+\n               `Percent of submissions during working hrs`+\n               `Total no. of different qns_attempted`+\n               `Gini Index for qns in submission`+\n               `Mean selected question scores`+\n               `Mean submission memory size by qns`+\n               `Mean timeconsume by qns`+\n               `Total no. of submissions`+\n               `Mean no. of different answering methods per qns`+\n               `Gini index for answering methods used per qns`+\n               `Total memory size of submissions`+\n               `Total timeconsume of submissions`, data = StudentLMKA_data)\nmodel8 <- lm(`Sum of points for s8Y2f knowledge` ~  \n               `Percent of submissions on weekdays`+\n               `Percent of submissions during working hrs`+\n               `Total no. of different qns_attempted`+\n               `Gini Index for qns in submission`+\n               `Mean selected question scores`+\n               `Mean submission memory size by qns`+\n               `Mean timeconsume by qns`+\n               `Total no. of submissions`+\n               `Mean no. of different answering methods per qns`+\n               `Gini index for answering methods used per qns`+\n               `Total memory size of submissions`+\n               `Total timeconsume of submissions`, data = StudentLMKA_data)\nmodel9 <- lm(`Sum of points for t5V9e knowledge` ~  \n               `Percent of submissions on weekdays`+\n               `Percent of submissions during working hrs`+\n               `Total no. of different qns_attempted`+\n               `Gini Index for qns in submission`+\n               `Mean selected question scores`+\n               `Mean submission memory size by qns`+\n               `Mean timeconsume by qns`+\n               `Total no. of submissions`+\n               `Mean no. of different answering methods per qns`+\n               `Gini index for answering methods used per qns`+\n               `Total memory size of submissions`+\n               `Total timeconsume of submissions`, data = StudentLMKA_data)\nmodel10 <- lm(`Sum of points for y9W5d knowledge` ~ \n               `Percent of submissions on weekdays`+\n               `Percent of submissions during working hrs`+\n               `Total no. of different qns_attempted`+\n               `Gini Index for qns in submission`+\n               `Mean selected question scores`+\n               `Mean submission memory size by qns`+\n               `Mean timeconsume by qns`+\n               `Total no. of submissions`+\n               `Mean no. of different answering methods per qns`+\n               `Gini index for answering methods used per qns`+\n               `Total memory size of submissions`+\n               `Total timeconsume of submissions`, data = StudentLMKA_data)\n\n#a <- \n  ggcoefstats(model3, \n            output = \"plot\")\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-73-1.png){width=1728}\n:::\n\n```{.r .cell-code}\n#b <- \n  ggcoefstats(model4, \n            output = \"plot\")\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-73-2.png){width=1728}\n:::\n\n```{.r .cell-code}\n#c <- \n  ggcoefstats(model5, \n            output = \"plot\")\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-73-3.png){width=1728}\n:::\n\n```{.r .cell-code}\n#d <- \n  ggcoefstats(model6, \n            output = \"plot\")\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-73-4.png){width=1728}\n:::\n\n```{.r .cell-code}\n#e <- \n  ggcoefstats(model7, \n            output = \"plot\")\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-73-5.png){width=1728}\n:::\n\n```{.r .cell-code}\n#f <- \n  ggcoefstats(model8, \n            output = \"plot\")\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-73-6.png){width=1728}\n:::\n\n```{.r .cell-code}\n#g <- \n  ggcoefstats(model9, \n            output = \"plot\")\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-73-7.png){width=1728}\n:::\n\n```{.r .cell-code}\n#h <- \n  ggcoefstats(model10, \n            output = \"plot\")\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex3_files/figure-html/unnamed-chunk-73-8.png){width=1728}\n:::\n\n```{.r .cell-code}\n#(a + b) / (c + d) / (e + f) / (g + h) \n```\n:::\n\n\n\n## Conclusion\n\nIn conclusion, the visual analysis of learning modes clustering found that 2 substantially distinct clusters can be formed using the selected students' learning mode features, whereby cluster 2 tends to be the more earnest learning mode cluster.\n\nUsing these clusters to draw a relationship with indicators of students' knowledge acquistion found that cluster 2 also had a better knowledge acquisition although cluster 1 students seems to have submit lesser answers in general, hence having a higher percentage of correct answers.\n\nAnd therefore, the consensus in the analysis found that there is a statistically significant relationship between the selected indicators for more hardworking learning modes with better knowledge aquisition.\n",
    "supporting": [
      "Take_home_Ex3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}